webpackJsonp([0xa93f37942701],{793:function(e,t){e.exports={data:{post:{id:"/Volumes/Zero/gatsby/eddychangme/content/posts/2017-01-05--react-chinese-ime-issue/index.md absPath of file >>> MarkdownRemark",html:'<p>問題來源是來自這個 React 官方儲存庫的 issue <a href="https://github.com/facebook/react/issues/3926">#3926</a>，與這個議題關聯的有很多其他的 issue，來自許多專案，有些是與 React 相關，有些則是 vue 或其它 JS 套件。也已經有其他的專案是專注於解決這個問題，例如<a href="https://github.com/fast-flow/react-composition">react-composition</a>，不過它是一個使用 ES5 語法的 React 元件。在其他的討論區上也有類似的<a href="http://react-china.org/t/onchange-input/3385">問題與解答</a>。本文的目的是希望能針對這個問題提供一些說明、現在暫時性的解決方案。</p>\n<p>下圖為目前解決 React 中”Controlled”(受控制的)input 元件的展示，可以到<a href="https://eyesofkids.github.io/">這裡</a>去測試:</p>\n<p><img src="/demo-e4cac1ad946f6171fcef5835c107b9e1.gif" alt="展示"></p>\n<blockquote>\n<p>注意事項: 目前的解決方案我認為是暫時性的，結果都放在這個<a href="https://github.com/eyesofkids/react-compositionevent">github 庫</a>上。這要分為”Controlled”(受控制的)與”Uncontrolled”(不受控制的)兩個種類的元件，影響的主要是 input 與 textarea 兩個元件，輸入法(IME, input method editor)的問題，不只會發生在中文，同樣的在日文、韓文或其它使用輸入法的語言應該都有同樣問題。</p>\n</blockquote>\n<h2>問題何來</h2>\n<p>React 元件主要使用<code class="language-text">onChange</code>人造事件，作為文字輸入框(input)或文字輸入區域(textarea)觸發文字輸入時的事件，這個事件用起來很直覺，理應當是如此。但<code class="language-text">onChange</code>在瀏覽器上，只要在這個文字輸入框上，有任何的鍵盤動作它都會觸發，也就是如果你是使用了中文、日文、韓文輸入法(IME)，不論是哪一種，拼音的、筆劃的還是其他的，只要有按下一個鍵盤的動作，就會觸發一次瀏覽器上這個元素的<code class="language-text">change</code>事件，對於原本就使用鍵盤上的英文字元作為輸入的語言來說，這沒什麼太大的問題，但對於要使用輸入法的語言使用者來說，不停的觸發<code class="language-text">change</code>事件，可能會造成程式功能上的運行邏輯問題。</p>\n<p>舉出一個實際的應用情況，一個使用 React 撰寫的搜尋電腦書籍的功能，使用者可以在文字輸入框裡輸入要搜尋的書名，程式中是利用<code class="language-text">onChange</code>事件觸發，進行比對資料庫中的書籍標題，當你想搜尋一本名為”林哥的 Java 教學”，第一個字為”林”，拼音輸入法需要輸入”lin”三個鍵盤上的字元，在”林”這個字從輸入法編輯器中加到真正的 input 元素前，<code class="language-text">onChange</code>已經捕捉到”lin”三個字元，在列表中已搜尋出一大堆有關”linux”的書籍。細節就不說了，還有可能對字元數量的的檢查之類的問題。不過，這是正確的程式運作邏輯嗎?很明顯的這是一個大問題。</p>\n<p>當然，你也可以用對中文字詞檢查的修正方式，或是乾脆不要用<code class="language-text">change</code>事件，改用其他按鈕觸發之類的事件來作這事情，或是不要用 React 中的”Controlled”(受控制的)input 或 textare 元件，但這會局限住在程式開發應用上的自由，要如何選擇就看你自己了，是不要使用它還是想辦法正視問題來解決它。</p>\n<h2>網頁上的 DOM 元素與”Uncontrolled”(不受控制的)的元件</h2>\n<p>這個問題在瀏覽器中，早就已經有了可應對的解決方法，DOM 事件中有一組額外的<a href="https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent">CompositionEvent</a>(組成事件)可以輔助開發者，它可以在可編輯的 DOM 元素上觸發，主要是 input 與 textarea 上，所以可以用來輔助解決<code class="language-text">change</code>事件的輸入法問題。CompositionEvent(組成事件)共有三個事件，分別為<code class="language-text">compositionstart</code>、<code class="language-text">compositionupdate</code>與<code class="language-text">compositionend</code>，它們代表的是開始進行字的組成、更新與結束，也就是代表開始以輸入法編輯器來組合鍵盤上的英文字元，選字或更新字的組合，到最後輸出字到真實 DOM 中的文字輸入框中，實務上每個中文字在輸入時，<code class="language-text">compositionstart</code>與<code class="language-text">compositionend</code>都只會會被觸發一次，而<code class="language-text">compositionupdate</code>則是有可能多次觸發。</p>\n<p>藉由 CompositionEvent 的輔助來解決的方式，也就是說在網頁上的 input 元素，可以利用 CompositionEvent 作為一個信號，如果正在使用 IME 輸入中文時，<code class="language-text">change</code>事件中的程式碼就先不要執行，等<code class="language-text">compositionend</code>觸發時，接著的<code class="language-text">change</code>事件才可以執行其中的程式碼，運作的原理就是這樣簡單而已。</p>\n<p>在 React 應用中，如果是一個”Uncontrolled”(不受控制的)的 input 元件，它與網頁上真實 DOM 中的 input 元素的事件行為無差異，也就是說，直接使用 CompositionEvent 的解決方式，就可以解決這個輸入法的問題，以下面的程式碼為範例:</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// @flow</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Cinput</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">:</span> Object<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// record if is on Composition</span>\n  <span class="token keyword">let</span> isOnComposition<span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleComposition</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">:</span> KeyboardEvent<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'compositionend\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// composition is end</span>\n      isOnComposition <span class="token operator">=</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token comment">// in composition</span>\n      isOnComposition <span class="token operator">=</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">:</span> KeyboardEvent<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// only when onComposition===false to fire onChange</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target <span class="token keyword">instanceof</span> <span class="token class-name">HTMLInputElement</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isOnComposition<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      props<span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>input\n      <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span>\n      onCompositionStart<span class="token operator">=</span><span class="token punctuation">{</span>handleComposition<span class="token punctuation">}</span>\n      onCompositionUpdate<span class="token operator">=</span><span class="token punctuation">{</span>handleComposition<span class="token punctuation">}</span>\n      onCompositionEnd<span class="token operator">=</span><span class="token punctuation">{</span>handleComposition<span class="token punctuation">}</span>\n      onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span>\n    <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Cinput</code></pre>\n      </div>\n<p>上面這是一個典型的”Uncontrolled”(不受控制的)input 元件，主要是它不用<code class="language-text">value</code>這個屬性。但如果它有來自上層元件的<code class="language-text">value</code>屬性與值，也就是上層元件用 props 傳遞給它<code class="language-text">value</code>屬性的值，就成了”Controlled”(受控制的)元件，它的事件整個模式就會與網頁上的真實 DOM 中的 input 元素不一樣，這後面再說明。</p>\n<p>這個解決方案在幾乎所有能支援 CompositionEvent 的瀏覽器(IE9 以上)都可以運行得很好，不過在 Google Chrome 瀏覽器在 2016 年的版本 53 之後，更動了<code class="language-text">change</code>與<code class="language-text">compositionend</code>的<a href="https://chromium.googlesource.com/chromium/src/+/afce9d93e76f2ff81baaa088a4ea25f67d1a76b3%5E%21/">觸發順序</a>，所以需要針對 Chrome 瀏覽器調整一下，如果是在 Chrome 瀏覽器中觸發<code class="language-text">compositionend</code>時，也要執行一次在原本在<code class="language-text">change</code>要執行的程式碼，就改成這樣而已。下面在上個程式碼中的<code class="language-text">handleComposition</code>函式中，多加了偵測是否為 Chrome 瀏覽器，與觸發原本的 onChange 方法程式碼，修改過的程式碼如下:</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// detect it is Chrome browser?</span>\n<span class="token keyword">const</span> isChrome <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>window<span class="token punctuation">.</span>chrome <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>window<span class="token punctuation">.</span>chrome<span class="token punctuation">.</span>webstore\n\n<span class="token keyword">const</span> <span class="token function-variable function">handleComposition</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">:</span> KeyboardEvent<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'compositionend\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// composition is end</span>\n    isOnComposition <span class="token operator">=</span> <span class="token boolean">false</span>\n\n    <span class="token comment">// fixed for Chrome v53+ and detect all Chrome</span>\n    <span class="token comment">// https://chromium.googlesource.com/chromium/src/</span>\n    <span class="token comment">// +/afce9d93e76f2ff81baaa088a4ea25f67d1a76b3%5E%21/</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target <span class="token keyword">instanceof</span> <span class="token class-name">HTMLInputElement</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isOnComposition <span class="token operator">&amp;&amp;</span> isChrome<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// fire onChange</span>\n      props<span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token comment">// in composition</span>\n    isOnComposition <span class="token operator">=</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>“Uncontrolled”(不受控制的)input 或 textarea 元件，解決方式就是這麼簡單而已，利用 CompositionEvent 過濾掉不必要的<code class="language-text">change</code>事件。</p>\n<blockquote>\n<p>註: 其它的解決方式還有，像<a href="https://developer.mozilla.org/en-US/docs/Web/API/InputEvent">InputEvent</a>中有一個<code class="language-text">isComposing</code>屬性，它也可以作為偵測目前是否正在進行輸入法的組字工作，但 InputEvent 事件目前只有 Firefox 中可以用，看起來沒什麼前景。另外，W3C 新提出的<a href="https://www.w3.org/TR/ime-api/">IME API</a>或許是一個未來較佳的解決方案，但目前只有<a href="https://blogs.msdn.microsoft.com/ie/2014/03/31/building-better-input-experience-for-east-asian-users-with-the-ime-api-in-ie11/">IE11 有實作</a>，其他瀏覽器品牌都沒有。</p>\n</blockquote>\n<h2>“Controlled”(受控制的)的元件</h2>\n<p>在 React 應用中，使用”Controlled”(受控制的)的 input 或 textarea 元件是另一回事，它會開始複雜起來。</p>\n<p>“Controlled”(受控制的)的元件並不是只有加上<code class="language-text">value</code>這個屬性這麼簡單，input 或 textarea 元件所呈現的值，主要會來自 state，state 有可能是上層元件的，利用 props 一層層傳遞過來的，或是這個元件中本身就有的 state，直接指定給在這個元件中的 render 中的 input 或 textarea 元件。也就是說，input 最後呈現的文字如果要進行改變，就需要改變到元件(不論在何處)的 state，要改變 state 只有透過 setState 方法，而 setState 方法有可能是個異步(延時)執行的情況。</p>\n<p>把這整個流程串接在一起後，我相信事件觸發的不連續情況會變得很嚴重，需要對不同情況下作測試與評估。目前我所作的測試還只是最基本的元件運用而已，複雜的元件情況還沒有開始進行。因為 state 有很多種用途，有時候內部使用，有時候要對外部使用者輸入介面的事件，或是有時候要對伺服器端的資料接收或傳送，不論是不是要使用 Redux、MobX 或 Flux 之類的 state 容器函式庫或框架，最終要進行重新渲染的工作，還是得呼叫 React 中的 setState 方法才行。</p>\n<p>在基本的測試時，我發現”Controlled”(受控制的)的 input 元件，它不僅事件觸發不連續的情況嚴重，而且有可能在不同瀏覽器上會有不同的結果。完全不會有問題的只有一個瀏覽器，就是上面註解中所說的已經實作出<a href="https://www.w3.org/TR/ime-api/">IME API</a>的 IE11，IE11 上可能根本不需要任何解決方案，它的輸入法編輯器是獨立於瀏覽器上的文字輸入框之外的。</p>\n<p>目前已測試的結果是有三種情況，“Chrome, Opera, IE, Edge”為一種，“Firefox”為一種，“Safari”為一種。我為這三種情況分別寫了不同的解決方式的程式碼，但這個事件觸發的不連續情況，現在無法有一致性的解決方案，我只能推測這大概可能是 React 內部設計的問題。</p>\n<p>不論是三種的那一種解決方案，有一個重點是你不能像上面的一般性解決方案，阻擋<code class="language-text">change</code>事件時要執行的程式碼，也就是阻擋<code class="language-text">setState</code>變動<code class="language-text">state</code>值，因為只要一經阻擋，<code class="language-text">input</code>元件的<code class="language-text">value</code>值就指定不到值，而且也不會觸發重新渲染。所以你只能讓<code class="language-text">change</code>事件不斷觸發，就像往常一樣。</p>\n<blockquote>\n<p>那麼要如何解決程式邏輯運作的問題？</p>\n</blockquote>\n<p>我使用了另一個內部的 state 物件中的值，稱為<code class="language-text">innerValue</code>，它是對比在 input 元件上不斷因觸發<code class="language-text">change</code>事件而輸入的值，稱為<code class="language-text">inputValue</code>。<code class="language-text">innerValue</code>是個會經過 CompositionEvent 修正過的值，所以它永遠不會帶有在輸入法組字過程的字串值。</p>\n<p>這個解決方案，是一個”掛羊頭賣狗肉”的用法，不論使用者在 input 元件如何輸入，輸入的過程都會改變<code class="language-text">inputValue</code>而已，<code class="language-text">inputValue</code>是一個暫存與呈現用的值，最終用來進行程式邏輯運算的是<code class="language-text">innerValue</code>。以最一開始的例子來說，使用者輸入”林哥的 Java 教學”，在一開始的”林”字輸入時，<code class="language-text">inputValue</code>是從”lin”到輸入完成變為”林”，而<code class="language-text">innerValue</code>是在輸入期間是空字串值，輸入完成才會變為”林”。所以，搜尋功能可以用<code class="language-text">innerValue</code>來作為運算的依據，用這個值來搜尋對應的資料，這才是正確的運算邏輯，因為<code class="language-text">innerValue</code>才是真正的不帶輸入法組字過程的值。</p>\n<p>大致上說明一下解決方式的程式碼，首先它有兩個在這個模組作用域中的全域變數，一個用來記錄是否在輸入法的組字過程中，另一個是給專給 Safari 瀏覽器用的:</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// if now is in composition session</span>\n<span class="token keyword">let</span> isOnComposition <span class="token operator">=</span> <span class="token boolean">false</span>\n\n<span class="token comment">// for safari use only, innervalue can\'t setState when compositionend occurred</span>\n<span class="token keyword">let</span> isInnerChangeFromOnChange <span class="token operator">=</span> <span class="token boolean">false</span></code></pre>\n      </div>\n<p>在專門處理<code class="language-text">change</code>事件的<code class="language-text">handleChange</code>方法中，判斷<code class="language-text">isInnerChangeFromOnChange</code>這一段是專門為了解決 Safari 瀏覽器的問題所寫，Safari 瀏覽器的行為是 CompositionEvent 在觸發時，其中的<code class="language-text">event.target.value</code>居然是組字過程中的英文字元，而不是觸發這個事件的 input 元素的所有字串，這也是特別怪異的地方，所以才會利用在<code class="language-text">compositionend</code>後會再觸發一次<code class="language-text">change</code>的特性，在這裡更新<code class="language-text">innerValue</code>。</p>\n<p>後面的程式碼，是代表在輸入法的組字過程中，setState 方法使用的差異，在組字過程中(<code class="language-text">isOnComposition === true</code>)的話，只會更動<code class="language-text">inputValue</code>值，而不會更動到<code class="language-text">innerValue</code>的值，這對應了上述所說的一個運作過程，一般的輸入鍵盤上的字元時不會有輸入法的問題，則是兩個值一併更動。程式碼如下:</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// console.log(\'change type \', e.type, \', target \', e.target, \', target.value \', e.target.value)</span>\n\n  <span class="token comment">// Flow check</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target <span class="token keyword">instanceof</span> <span class="token class-name">HTMLInputElement</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>isInnerChangeFromOnChange<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> inputValue<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">,</span> innerValue<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    isInnerChangeFromOnChange <span class="token operator">=</span> <span class="token boolean">false</span>\n    <span class="token keyword">return</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// when is on composition, change inputValue only</span>\n  <span class="token comment">// when not in composition change inputValue and innerValue both</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isOnComposition<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      inputValue<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n      innerValue<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> inputValue<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>在專門處理<code class="language-text">composition</code>事件的<code class="language-text">handleComposition</code>方法中，主要是為了在<code class="language-text">compositionend</code>觸發時，進行更新<code class="language-text">innerValue</code>所撰寫的一些程式碼。在第一種情況時，也就是在 Chrome, IE, Edge, Opera 瀏覽器時，只需要直接用<code class="language-text">e.target.value</code>更新<code class="language-text">innerValue</code>即可。在第二種情況是 Firefox，它不知道為什麼會掉值，所以還需要幫它再一併更新<code class="language-text">innerValue</code>一次。第三種情況，上面有說過了，特別的怪異情況，所以對<code class="language-text">innerValue</code>的更新改到<code class="language-text">compositionend</code>之後的那個<code class="language-text">change</code>事件去作了。程式碼如下:</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token function-variable function">handleComposition</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// console.log(\'type \', e.type, \', target \', e.target, \',target.value \', e.target.value, \', data\', e.data)</span>\n\n  <span class="token comment">// Flow check</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target <span class="token keyword">instanceof</span> <span class="token class-name">HTMLInputElement</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'compositionend\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Chrome is ok for only setState innerValue</span>\n    <span class="token comment">// Opera, IE and Edge is like Chrome</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isChrome <span class="token operator">||</span> isIE <span class="token operator">||</span> isEdge <span class="token operator">||</span> isOpera<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> innerValue<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// Firefox need to setState inputValue again...</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isFirefox<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> innerValue<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">,</span> inputValue<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// Safari think e.target.value in composition event is keyboard char,</span>\n    <span class="token comment">// but it will fire another change after compositionend</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isSafari<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// do change in the next change event</span>\n      isInnerChangeFromOnChange <span class="token operator">=</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n\n    isOnComposition <span class="token operator">=</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    isOnComposition <span class="token operator">=</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<blockquote>\n<p>註: 目前這個暫時的解決方式，其方式並不是參考自<a href="https://github.com/fast-flow/react-composition">react-composition</a>項目，解決方式雖然有些類似，但 react-composition 用的是 ES5 的 React 工廠樣式元件語法，我對這種語法並不熟悉。在寫這篇文章時，才仔細看了一下 react-composition 的程式碼，只能說它的作者實際上也有測試過這個問題，也知道只有用另一個 state 中的值才能解決這問題。</p>\n</blockquote>\n<h2>總結</h2>\n<p>如果你是使用”Uncontrolled”(不受控制的)的元件，那麼解決方法很簡單，就如同上面所說的，像一般的網頁上的 DOM 元素的解決方式即可。</p>\n<p>但對於”Controlled”(受控制的)的元件來說，目前的解決方案是一種 try-and-error(試誤法)的暫時性解決方案，我目前只能按照已測試的平台與瀏覽器去修正，沒測過的瀏覽器與平台，就不得而知了。</p>\n<p>關於這個”Controlled”(受控制的)的元件的事件觸發，目前看到有在不同瀏覽器上的事件觸發不連續情況，我也有發一個<a href="https://github.com/facebook/react/issues/8683">議題(Issue)</a>給 React 官方。或許比較好的治本方案，是需要從 state 更動方式的內部程式碼，或是人造事件觸發的順序，進行一些調整，這超出我的能力範圍，就有待開發團隊的回應了。</p>\n<p>最後，如果你正好有需要到這個功能，或是你認為這個功能有需要，你可以幫忙測試看看或是提供一些建議。我已經把所有的程式碼、展示、線上測試、解決方案都集中到這個 Github 庫的<a href="https://github.com/eyesofkids/react-compositionevent">react-compositionevent</a>中。或許你現在需要一個解決方案，你可以用裡面目前的暫時性解決方式試試也可以。</p>',htmlAst:{type:"root",children:[{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"問題來源是來自這個 React 官方儲存庫的 issue "},{type:"element",tagName:"a",properties:{href:"https://github.com/facebook/react/issues/3926"},children:[{type:"text",value:"#3926"}]},{type:"text",value:"，與這個議題關聯的有很多其他的 issue，來自許多專案，有些是與 React 相關，有些則是 vue 或其它 JS 套件。也已經有其他的專案是專注於解決這個問題，例如"},{type:"element",tagName:"a",properties:{href:"https://github.com/fast-flow/react-composition"},children:[{type:"text",value:"react-composition"}]},{type:"text",value:"，不過它是一個使用 ES5 語法的 React 元件。在其他的討論區上也有類似的"},{type:"element",tagName:"a",properties:{href:"http://react-china.org/t/onchange-input/3385"},children:[{type:"text",value:"問題與解答"}]},{type:"text",value:"。本文的目的是希望能針對這個問題提供一些說明、現在暫時性的解決方案。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"下圖為目前解決 React 中”Controlled”(受控制的)input 元件的展示，可以到"},{type:"element",tagName:"a",properties:{href:"https://eyesofkids.github.io/"},children:[{type:"text",value:"這裡"}]},{type:"text",value:"去測試:"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"img",properties:{src:"/demo-e4cac1ad946f6171fcef5835c107b9e1.gif",alt:"展示"},children:[]}]},{type:"text",value:"\n"},{type:"element",tagName:"blockquote",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"注意事項: 目前的解決方案我認為是暫時性的，結果都放在這個"},{type:"element",tagName:"a",properties:{href:"https://github.com/eyesofkids/react-compositionevent"},children:[{type:"text",value:"github 庫"}]},{type:"text",value:"上。這要分為”Controlled”(受控制的)與”Uncontrolled”(不受控制的)兩個種類的元件，影響的主要是 input 與 textarea 兩個元件，輸入法(IME, input method editor)的問題，不只會發生在中文，同樣的在日文、韓文或其它使用輸入法的語言應該都有同樣問題。"}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"問題何來"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"React 元件主要使用"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"onChange"}]},{type:"text",value:"人造事件，作為文字輸入框(input)或文字輸入區域(textarea)觸發文字輸入時的事件，這個事件用起來很直覺，理應當是如此。但"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"onChange"}]},{type:"text",value:"在瀏覽器上，只要在這個文字輸入框上，有任何的鍵盤動作它都會觸發，也就是如果你是使用了中文、日文、韓文輸入法(IME)，不論是哪一種，拼音的、筆劃的還是其他的，只要有按下一個鍵盤的動作，就會觸發一次瀏覽器上這個元素的"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"事件，對於原本就使用鍵盤上的英文字元作為輸入的語言來說，這沒什麼太大的問題，但對於要使用輸入法的語言使用者來說，不停的觸發"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"事件，可能會造成程式功能上的運行邏輯問題。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"舉出一個實際的應用情況，一個使用 React 撰寫的搜尋電腦書籍的功能，使用者可以在文字輸入框裡輸入要搜尋的書名，程式中是利用"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"onChange"}]},{type:"text",value:"事件觸發，進行比對資料庫中的書籍標題，當你想搜尋一本名為”林哥的 Java 教學”，第一個字為”林”，拼音輸入法需要輸入”lin”三個鍵盤上的字元，在”林”這個字從輸入法編輯器中加到真正的 input 元素前，"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"onChange"}]},{type:"text",value:"已經捕捉到”lin”三個字元，在列表中已搜尋出一大堆有關”linux”的書籍。細節就不說了，還有可能對字元數量的的檢查之類的問題。不過，這是正確的程式運作邏輯嗎?很明顯的這是一個大問題。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"當然，你也可以用對中文字詞檢查的修正方式，或是乾脆不要用"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"事件，改用其他按鈕觸發之類的事件來作這事情，或是不要用 React 中的”Controlled”(受控制的)input 或 textare 元件，但這會局限住在程式開發應用上的自由，要如何選擇就看你自己了，是不要使用它還是想辦法正視問題來解決它。"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"網頁上的 DOM 元素與”Uncontrolled”(不受控制的)的元件"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"這個問題在瀏覽器中，早就已經有了可應對的解決方法，DOM 事件中有一組額外的"},{type:"element",tagName:"a",properties:{href:"https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent"},children:[{type:"text",value:"CompositionEvent"}]},{type:"text",value:"(組成事件)可以輔助開發者，它可以在可編輯的 DOM 元素上觸發，主要是 input 與 textarea 上，所以可以用來輔助解決"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"事件的輸入法問題。CompositionEvent(組成事件)共有三個事件，分別為"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"compositionstart"}]},{type:"text",value:"、"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"compositionupdate"}]},{type:"text",value:"與"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"compositionend"}]},{type:"text",value:"，它們代表的是開始進行字的組成、更新與結束，也就是代表開始以輸入法編輯器來組合鍵盤上的英文字元，選字或更新字的組合，到最後輸出字到真實 DOM 中的文字輸入框中，實務上每個中文字在輸入時，"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"compositionstart"}]},{type:"text",value:"與"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"compositionend"}]},{type:"text",value:"都只會會被觸發一次，而"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"compositionupdate"}]},{type:"text",value:"則是有可能多次觸發。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"藉由 CompositionEvent 的輔助來解決的方式，也就是說在網頁上的 input 元素，可以利用 CompositionEvent 作為一個信號，如果正在使用 IME 輸入中文時，"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"事件中的程式碼就先不要執行，等"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"compositionend"}]},{type:"text",value:"觸發時，接著的"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"事件才可以執行其中的程式碼，運作的原理就是這樣簡單而已。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"在 React 應用中，如果是一個”Uncontrolled”(不受控制的)的 input 元件，它與網頁上真實 DOM 中的 input 元素的事件行為無差異，也就是說，直接使用 CompositionEvent 的解決方式，就可以解決這個輸入法的問題，以下面的程式碼為範例:"
}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// @flow"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"import"}]},{type:"text",value:" React "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"from"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'react'"}]},{type:"text",value:"\n\n"},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"const"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","function-variable","function"]},children:[{type:"text",value:"Cinput"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"props"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" Object"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"=>"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// record if is on Composition"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"let"}]},{type:"text",value:" isOnComposition"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" boolean "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","boolean"]},children:[{type:"text",value:"false"}]},{type:"text",value:"\n\n  "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"const"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","function-variable","function"]},children:[{type:"text",value:"handleComposition"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" KeyboardEvent"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"=>"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"type "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"==="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'compositionend'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n      "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// composition is end"}]},{type:"text",value:"\n      isOnComposition "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","boolean"]},children:[{type:"text",value:"false"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"else"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n      "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// in composition"}]},{type:"text",value:"\n      isOnComposition "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","boolean"]},children:[{type:"text",value:"true"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n\n  "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"const"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","function-variable","function"]},children:[{type:"text",value:"handleChange"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" KeyboardEvent"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"=>"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// only when onComposition===false to fire onChange"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"target "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"instanceof"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","class-name"]},children:[{type:"text",value:"HTMLInputElement"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"&&"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"!"}]},{type:"text",value:"isOnComposition"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n      props"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"onChange"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n\n  "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"return"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"<"}]},{type:"text",value:"input\n      "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"..."}]},{type:"text",value:"props"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n      onCompositionStart"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"handleComposition"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n      onCompositionUpdate"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"handleComposition"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n      onCompositionEnd"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"handleComposition"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n      onChange"},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"handleChange"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"/"}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:">"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n\n"},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"export"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"default"}]},{type:"text",value:" Cinput"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"上面這是一個典型的”Uncontrolled”(不受控制的)input 元件，主要是它不用"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"value"}]},{type:"text",value:"這個屬性。但如果它有來自上層元件的"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"value"}]},{type:"text",value:"屬性與值，也就是上層元件用 props 傳遞給它"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"value"}]},{type:"text",value:"屬性的值，就成了”Controlled”(受控制的)元件，它的事件整個模式就會與網頁上的真實 DOM 中的 input 元素不一樣，這後面再說明。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"這個解決方案在幾乎所有能支援 CompositionEvent 的瀏覽器(IE9 以上)都可以運行得很好，不過在 Google Chrome 瀏覽器在 2016 年的版本 53 之後，更動了"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"與"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"compositionend"}]},{type:"text",value:"的"},{type:"element",tagName:"a",properties:{href:"https://chromium.googlesource.com/chromium/src/+/afce9d93e76f2ff81baaa088a4ea25f67d1a76b3%5E%21/"},children:[{type:"text",value:"觸發順序"}]},{type:"text",value:"，所以需要針對 Chrome 瀏覽器調整一下，如果是在 Chrome 瀏覽器中觸發"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"compositionend"}]},{type:"text",value:"時，也要執行一次在原本在"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"要執行的程式碼，就改成這樣而已。下面在上個程式碼中的"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"handleComposition"}]},{type:"text",value:"函式中，多加了偵測是否為 Chrome 瀏覽器，與觸發原本的 onChange 方法程式碼，修改過的程式碼如下:"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// detect it is Chrome browser?"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"const"}]},{type:"text",value:" isChrome "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"!"}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"!"}]},{type:"text",value:"window"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"chrome "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"&&"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"!"}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"!"}]},{type:"text",value:"window"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"chrome"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"webstore\n\n"},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"const"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","function-variable","function"]},children:[{type:"text",value:"handleComposition"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" KeyboardEvent"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"=>"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"type "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"==="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'compositionend'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// composition is end"}]},{type:"text",value:"\n    isOnComposition "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","boolean"]},children:[{type:"text",value:"false"}]},{type:"text",value:"\n\n    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// fixed for Chrome v53+ and detect all Chrome"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// https://chromium.googlesource.com/chromium/src/"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// +/afce9d93e76f2ff81baaa088a4ea25f67d1a76b3%5E%21/"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"target "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"instanceof"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","class-name"]},children:[{type:"text",value:"HTMLInputElement"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"&&"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"!"}]},{type:"text",value:"isOnComposition "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"&&"}]},{type:"text",value:" isChrome"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n      "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// fire onChange"}]},{type:"text",value:"\n      props"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"onChange"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"else"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// in composition"}]},{type:"text",value:"\n    isOnComposition "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","boolean"]},children:[{type:"text",value:"true"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"“Uncontrolled”(不受控制的)input 或 textarea 元件，解決方式就是這麼簡單而已，利用 CompositionEvent 過濾掉不必要的"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"事件。"}]},{type:"text",value:"\n"},{type:"element",tagName:"blockquote",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"註: 其它的解決方式還有，像"},{type:"element",tagName:"a",properties:{href:"https://developer.mozilla.org/en-US/docs/Web/API/InputEvent"},children:[{type:"text",value:"InputEvent"}]},{type:"text",value:"中有一個"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"isComposing"}]},{type:"text",value:"屬性，它也可以作為偵測目前是否正在進行輸入法的組字工作，但 InputEvent 事件目前只有 Firefox 中可以用，看起來沒什麼前景。另外，W3C 新提出的"},{type:"element",tagName:"a",properties:{href:"https://www.w3.org/TR/ime-api/"},children:[{type:"text",value:"IME API"}]},{type:"text",value:"或許是一個未來較佳的解決方案，但目前只有"},{type:"element",tagName:"a",properties:{href:"https://blogs.msdn.microsoft.com/ie/2014/03/31/building-better-input-experience-for-east-asian-users-with-the-ime-api-in-ie11/"},children:[{type:"text",value:"IE11 有實作"}]},{type:"text",value:"，其他瀏覽器品牌都沒有。"}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"“Controlled”(受控制的)的元件"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"在 React 應用中，使用”Controlled”(受控制的)的 input 或 textarea 元件是另一回事，它會開始複雜起來。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"“Controlled”(受控制的)的元件並不是只有加上"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"value"}]},{type:"text",value:"這個屬性這麼簡單，input 或 textarea 元件所呈現的值，主要會來自 state，state 有可能是上層元件的，利用 props 一層層傳遞過來的，或是這個元件中本身就有的 state，直接指定給在這個元件中的 render 中的 input 或 textarea 元件。也就是說，input 最後呈現的文字如果要進行改變，就需要改變到元件(不論在何處)的 state，要改變 state 只有透過 setState 方法，而 setState 方法有可能是個異步(延時)執行的情況。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"把這整個流程串接在一起後，我相信事件觸發的不連續情況會變得很嚴重，需要對不同情況下作測試與評估。目前我所作的測試還只是最基本的元件運用而已，複雜的元件情況還沒有開始進行。因為 state 有很多種用途，有時候內部使用，有時候要對外部使用者輸入介面的事件，或是有時候要對伺服器端的資料接收或傳送，不論是不是要使用 Redux、MobX 或 Flux 之類的 state 容器函式庫或框架，最終要進行重新渲染的工作，還是得呼叫 React 中的 setState 方法才行。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"在基本的測試時，我發現”Controlled”(受控制的)的 input 元件，它不僅事件觸發不連續的情況嚴重，而且有可能在不同瀏覽器上會有不同的結果。完全不會有問題的只有一個瀏覽器，就是上面註解中所說的已經實作出"},{type:"element",tagName:"a",properties:{href:"https://www.w3.org/TR/ime-api/"},children:[{type:"text",value:"IME API"}]},{type:"text",value:"的 IE11，IE11 上可能根本不需要任何解決方案，它的輸入法編輯器是獨立於瀏覽器上的文字輸入框之外的。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"目前已測試的結果是有三種情況，“Chrome, Opera, IE, Edge”為一種，“Firefox”為一種，“Safari”為一種。我為這三種情況分別寫了不同的解決方式的程式碼，但這個事件觸發的不連續情況，現在無法有一致性的解決方案，我只能推測這大概可能是 React 內部設計的問題。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"不論是三種的那一種解決方案，有一個重點是你不能像上面的一般性解決方案，阻擋"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"事件時要執行的程式碼，也就是阻擋"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"setState"}]},{type:"text",value:"變動"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"state"}]},{type:"text",value:"值，因為只要一經阻擋，"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"input"}]},{type:"text",value:"元件的"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"value"}]},{type:"text",value:"值就指定不到值，而且也不會觸發重新渲染。所以你只能讓"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"事件不斷觸發，就像往常一樣。"}]},{type:"text",value:"\n"},{type:"element",tagName:"blockquote",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"那麼要如何解決程式邏輯運作的問題？"}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"我使用了另一個內部的 state 物件中的值，稱為"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"innerValue"}]},{type:"text",value:"，它是對比在 input 元件上不斷因觸發"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"事件而輸入的值，稱為"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"inputValue"}]},{type:"text",value:"。"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"innerValue"}]},{type:"text",value:"是個會經過 CompositionEvent 修正過的值，所以它永遠不會帶有在輸入法組字過程的字串值。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"這個解決方案，是一個”掛羊頭賣狗肉”的用法，不論使用者在 input 元件如何輸入，輸入的過程都會改變"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"inputValue"}]},{type:"text",value:"而已，"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"inputValue"}]},{type:"text",value:"是一個暫存與呈現用的值，最終用來進行程式邏輯運算的是"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"innerValue"}]},{type:"text",value:"。以最一開始的例子來說，使用者輸入”林哥的 Java 教學”，在一開始的”林”字輸入時，"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"inputValue"}]},{type:"text",value:"是從”lin”到輸入完成變為”林”，而"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"innerValue"}]},{type:"text",value:"是在輸入期間是空字串值，輸入完成才會變為”林”。所以，搜尋功能可以用"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"innerValue"}]},{type:"text",value:"來作為運算的依據，用這個值來搜尋對應的資料，這才是正確的運算邏輯，因為"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"innerValue"}]},{type:"text",value:"才是真正的不帶輸入法組字過程的值。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"大致上說明一下解決方式的程式碼，首先它有兩個在這個模組作用域中的全域變數，一個用來記錄是否在輸入法的組字過程中，另一個是給專給 Safari 瀏覽器用的:"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// if now is in composition session"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"let"}]},{type:"text",value:" isOnComposition "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","boolean"]},children:[{type:"text",value:"false"}]},{type:"text",value:"\n\n"},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// for safari use only, innervalue can't setState when compositionend occurred"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"let"}]},{type:"text",value:" isInnerChangeFromOnChange "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","boolean"]},children:[{type:"text",value:"false"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"在專門處理"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"
}]},{type:"text",value:"事件的"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"handleChange"}]},{type:"text",value:"方法中，判斷"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"isInnerChangeFromOnChange"}]},{type:"text",value:"這一段是專門為了解決 Safari 瀏覽器的問題所寫，Safari 瀏覽器的行為是 CompositionEvent 在觸發時，其中的"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"event.target.value"}]},{type:"text",value:"居然是組字過程中的英文字元，而不是觸發這個事件的 input 元素的所有字串，這也是特別怪異的地方，所以才會利用在"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"compositionend"}]},{type:"text",value:"後會再觸發一次"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"的特性，在這裡更新"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"innerValue"}]},{type:"text",value:"。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"後面的程式碼，是代表在輸入法的組字過程中，setState 方法使用的差異，在組字過程中("},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"isOnComposition === true"}]},{type:"text",value:")的話，只會更動"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"inputValue"}]},{type:"text",value:"值，而不會更動到"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"innerValue"}]},{type:"text",value:"的值，這對應了上述所說的一個運作過程，一般的輸入鍵盤上的字元時不會有輸入法的問題，則是兩個值一併更動。程式碼如下:"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"element",tagName:"span",properties:{className:["token","function-variable","function"]},children:[{type:"text",value:"handleChange"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" Event"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"=>"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// console.log('change type ', e.type, ', target ', e.target, ', target.value ', e.target.value)"}]},{type:"text",value:"\n\n  "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// Flow check"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"!"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"target "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"instanceof"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","class-name"]},children:[{type:"text",value:"HTMLInputElement"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"return"}]},{type:"text",value:"\n\n  "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"isInnerChangeFromOnChange"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"this"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"setState"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:" inputValue"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"target"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"value"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:" innerValue"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"target"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"value "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:"\n    isInnerChangeFromOnChange "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","boolean"]},children:[{type:"text",value:"false"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"return"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n\n  "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// when is on composition, change inputValue only"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// when not in composition change inputValue and innerValue both"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"!"}]},{type:"text",value:"isOnComposition"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"this"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"setState"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n      inputValue"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"target"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"value"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n      innerValue"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"target"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"value"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"else"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"this"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"setState"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:" inputValue"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"target"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"value "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"在專門處理"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"composition"}]},{type:"text",value:"事件的"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"handleComposition"}]},{type:"text",value:"方法中，主要是為了在"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"compositionend"}]},{type:"text",value:"觸發時，進行更新"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"innerValue"}]},{type:"text",value:"所撰寫的一些程式碼。在第一種情況時，也就是在 Chrome, IE, Edge, Opera 瀏覽器時，只需要直接用"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"e.target.value"}]},{type:"text",value:"更新"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"innerValue"}]},{type:"text",value:"即可。在第二種情況是 Firefox，它不知道為什麼會掉值，所以還需要幫它再一併更新"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"innerValue"}]},{type:"text",value:"一次。第三種情況，上面有說過了，特別的怪異情況，所以對"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"innerValue"}]},{type:"text",value:"的更新改到"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"compositionend"}]},{type:"text",value:"之後的那個"},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"change"}]},{type:"text",value:"事件去作了。程式碼如下:"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"],dataLanguage:"js"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-js"]},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"element",tagName:"span",properties:{className:["token","function-variable","function"]},children:[{type:"text",value:"handleComposition"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" Event"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"=>"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// console.log('type ', e.type, ', target ', e.target, ',target.value ', e.target.value, ', data', e.data)"}]},{type:"text",value:"\n\n  "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// Flow check"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"!"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"target "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"instanceof"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","class-name"]},children:[{type:"text",value:"HTMLInputElement"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"return"}]},{type:"text",value:"\n\n  "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"type "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"==="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'compositionend'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// Chrome is ok for only setState innerValue"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// Opera, IE and Edge is like Chrome"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"isChrome "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"||"}]},{type:"text",value:" isIE "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"||"}]},{type:"text",value:" isEdge "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"||"}]},{type:"text",value:" isOpera"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n      "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"this"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"setState"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:" innerValue"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"target"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"value "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n\n    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// Firefox need to setState inputValue again..."}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"isFirefox"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n      "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"this"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"setState"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:" innerValue"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"target"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"value"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:" inputValue"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" e"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"target"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"text",value:"value "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n\n    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// Safari think e.target.value in composition event is keyboard char,"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// but it will fire another change after compositionend"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"isSafari"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n      "},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:"// do change in the next change event"}]},{type:"text",value:"\n      isInnerChangeFromOnChange "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","boolean"]},children:[{type:"text",value:"true"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n\n    isOnComposition "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","boolean"]},children:[{type:"text",value:"false"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"else"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n    isOnComposition "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","boolean"]},children:[{type:"text",value:"true"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"blockquote",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"註: 目前這個暫時的解決方式，其方式並不是參考自"},{type:"element",tagName:"a",properties:{href:"https://github.com/fast-flow/react-composition"},children:[{type:"text",value:"react-composition"}]},{type:"text",value:"項目，解決方式雖然有些類似，但 react-composition 用的是 ES5 的 React 工廠樣式元件語法，我對這種語法並不熟悉。在寫這篇文章時，才仔細看了一下 react-composition 的程式碼，只能說它的作者實際上也有測試過這個問題，也知道只有用另一個 state 中的值才能解決這問題。"}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"總結"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"如果你是使用”Uncontrolled”(不受控制的)的元件，那麼解決方法很簡單，就如同上面所說的，像一般的網頁上的 DOM 元素的解決方式即可。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"但對於”Controlled”(受控制的)的元件來說，目前的解決方案是一種 try-and-error(試誤法)的暫時性解決方案，我目前只能按照已測試的平台與瀏覽器去修正，沒測過的瀏覽器與平台，就不得而知了。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"關於這個”Controlled”(受控制的)的元件的事件觸發，目前看到有在不同瀏覽器上的事件觸發不連續情況，我也有發一個"},{type:"element",tagName:"a",properties:{href:"https://github.com/facebook/react/issues/8683"},children:[{type:"text",value:"議題(Issue)"}]},{type:"text",value:"給 React 官方。或許比較好的治本方案，是需要從 state 更動方式的內部程式碼，或是人造事件觸發的順序，進行一些調整，這超出我的能力範圍，就有待開發團隊的回應了。"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"最後，如果你正好有需要到這個功能，或是你認為這個功能有需要，你可以幫忙測試看看或是提供一些建議。我已經把所有的程式碼、展示、線上測試、解決方案都集中到這個 Github 庫的"},{type:"element",tagName:"a",properties:{href:"https://github.com/eyesofkids/react-compositionevent"},children:[{type:"text",value:"react-compositionevent"}]},{type:"text",value:"中。或許你現在需要一個解決方案，你可以用裡面目前的暫時性解決方式試試也可以。"}]}],data:{quirksMode:!1}},fields:{slug:"/react-chinese-ime-issue/",prefix:"2017-01-05"},frontmatter:{title:"中文輸入法與React文字輸入框的問題與解決方案",subTitle:"React and Chinese IME",cover:{childImageSharp:{resize:{src:"/static/reactnative-4e03ea5d8b293f683dc0b299539d4fb4-160fa.png"}}}}},author:{id:"/Volumes/Zero/gatsby/eddychangme/content/parts/author.md absPath of file >>> MarkdownRemark",html:"<p>作者: <strong>Eddy Chang</strong></p>"},footnote:{id:"/Volumes/Zero/gatsby/eddychangme/content/parts/footnote.md absPath of file >>> MarkdownRemark",html:'<ul>\n<li>本站所有內容係採用 <a href="https://creativecommons.org/licenses/by-sa/4.0/">創用 CC 姓名標示-相同方式分享 4.0 國際</a> 授權條款授權</li>\n</ul>'},site:{siteMetadata:{facebook:{appId:"441411672723522"}}}},pathContext:{slug:"/react-chinese-ime-issue/"}}}});
//# sourceMappingURL=path---react-chinese-ime-issue-23de86423880de5deb1b.js.map