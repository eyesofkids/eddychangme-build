{"version":3,"sources":["webpack:///path---js-object-plus-object-f461d68f837392433626.js","webpack:///./.cache/json/js-object-plus-object.json"],"names":["webpackJsonp","817","module","exports","data","post","id","html","htmlAst","type","children","tagName","properties","value","className","href","dataLanguage","quirksMode","fields","slug","prefix","frontmatter","title","subTitle","cover","childImageSharp","resize","src","author","footnote","site","siteMetadata","facebook","appId","pathContext"],"mappings":"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","file":"path---js-object-plus-object-f461d68f837392433626.js","sourcesContent":["webpackJsonp([80653169461397],{\n\n/***/ 817:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"post\":{\"id\":\"/Volumes/Zero/gatsby/eddychangme/content/posts/2017-01-06--js-object-plus-object/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>在 JS 中的運算符共同的情況中，(+)符號是很常見的一種，它有以下的使用情況:</p>\\n<ul>\\n<li>數字的加法運算，二元運算</li>\\n<li>字串的連接運算，二元運算，最高優先</li>\\n<li>正號，一元運算，可延伸為強制轉換其他類型的運算元為數字類型</li>\\n</ul>\\n<p>當然，如果考慮多個符號一起使用時，(+=)與(++)又是另外的用途。</p>\\n<p>另一個常見的是花括號({})，它有兩個用途也很常見:</p>\\n<ul>\\n<li>物件的字面文字定義</li>\\n<li>區塊語句</li>\\n</ul>\\n<p>所以，要能回答這個問題，要先搞清楚重點是什麼？</p>\\n<p>第一個重點是:</p>\\n<blockquote>\\n<p>加號(+)運算在 JS 中在使用上的規定是什麼。</p>\\n</blockquote>\\n<p>第二個重點則是:</p>\\n<blockquote>\\n<p>物件在 JS 中是怎麼轉換為原始資料類型的值的。</p>\\n</blockquote>\\n<h2>加號運算符(+)</h2>\\n<p>除了上面說明的常見情況外，在標準中轉換的規則還有以下幾個，要注意它的順序:</p>\\n<blockquote>\\n<p>operand + operand = result</p>\\n</blockquote>\\n<ol>\\n<li>使用<code class=\\\"language-text\\\">ToPrimitive</code>運算轉換左與右運算元為原始資料類型值(primitive)</li>\\n<li>在第 1 步轉換後，如果有運算元出現原始資料類型是”字串”類型值時，則另一運算元作強制轉換為字串，然後作字串的連接運算(concatenation)</li>\\n<li>在其他情況時，所有運算元都會轉換為原始資料類型的”數字”類型值，然後作數學的相加運算(addition)</li>\\n</ol>\\n<h2>ToPrimitive 內部運算</h2>\\n<p>因此，加號運算符只能使用於原始資料類型，那麼對於物件類型的值，要如何轉換為原始資料類型？下面說明是如何轉換為原始資料類型的。</p>\\n<p>在<a href=\\\"http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive\\\">ECMAScript 6th Edition #7.1.1</a>，有一個抽象的<code class=\\\"language-text\\\">ToPrimitive</code>運算，它會用於物件轉換為原始資料類型，這個運算不只會用在加號運算符，也會用在關係比較或值相等比較的運算中。下面有關於<code class=\\\"language-text\\\">ToPrimitive</code>的說明語法:</p>\\n<blockquote>\\n<p>ToPrimitive(input, PreferredType?)</p>\\n</blockquote>\\n<p><code class=\\\"language-text\\\">input</code>代表代入的值，而<code class=\\\"language-text\\\">PreferredType</code>可以是數字(Number)或字串(String)其中一種，這會代表”優先的”、“首選的”的要進行轉換到哪一種原始類型，轉換的步驟會依這裡的值而有所不同。但如果沒有提供這個值也就是預設情況，則會設定轉換的<code class=\\\"language-text\\\">hint</code>值為<code class=\\\"language-text\\\">&quot;default&quot;</code>。這個首選的轉換原始類型的指示(<code class=\\\"language-text\\\">hint</code>值)，是在作內部轉換時由 JS 視情況自動加上的，一般情況就是預設值。</p>\\n<p>而在 JS 的<code class=\\\"language-text\\\">Object</code>原型的設計中，都一定會有兩個<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>方法，所以這兩個方法在所有物件裡面都會有，不過它們在轉換有可能會交換被呼叫的順序。</p>\\n<h3>當 PreferredType 為數字(Number)時</h3>\\n<p>當<code class=\\\"language-text\\\">PreferredType</code>為數字(Number)時，<code class=\\\"language-text\\\">input</code>為要被轉換的值，以下是轉換這個<code class=\\\"language-text\\\">input</code>值的步驟:</p>\\n<ol>\\n<li>如果<code class=\\\"language-text\\\">input</code>是原始資料類型，則直接回傳<code class=\\\"language-text\\\">input</code>。</li>\\n<li>否則，如果<code class=\\\"language-text\\\">input</code>是個物件時，則呼叫物件的<code class=\\\"language-text\\\">valueOf()</code>方法，如果能得到原始資料類型的值，則回傳這個值。</li>\\n<li>否則，如果<code class=\\\"language-text\\\">input</code>是個物件時，呼叫物件的<code class=\\\"language-text\\\">toString()</code>方法，如果能得到原始資料類型的值，則回傳這個值。</li>\\n<li>否則，拋出 TypeError 錯誤。</li>\\n</ol>\\n<h3>當 PreferredType 為字串(String)時</h3>\\n<p>上面的步驟 2 與 3 對調，如同下面所說:</p>\\n<ol>\\n<li>如果<code class=\\\"language-text\\\">input</code>是原始資料類型，則直接回傳<code class=\\\"language-text\\\">input</code>。</li>\\n<li>否則，如果<code class=\\\"language-text\\\">input</code>是個物件時，呼叫物件的<code class=\\\"language-text\\\">toString()</code>方法，如果能得到原始資料類型的值，則回傳這個值。</li>\\n<li>否則，如果<code class=\\\"language-text\\\">input</code>是個物件時，則呼叫物件的<code class=\\\"language-text\\\">valueOf()</code>方法，如果能得到原始資料類型的值，則回傳這個值。</li>\\n<li>否則，拋出 TypeError 錯誤。</li>\\n</ol>\\n<h3>PreferredType 沒提供時，也就是 hint 為”default”時</h3>\\n<p>與<code class=\\\"language-text\\\">PreferredType</code>為數字(Number)時的步驟相同。</p>\\n<blockquote>\\n<p><strong>數字</strong>其實是預設的首選類型，也就是說在一般情況下，加號運算中的物件要作轉型時，都是先呼叫<code class=\\\"language-text\\\">valueOf</code>再呼叫<code class=\\\"language-text\\\">toString</code>。</p>\\n</blockquote>\\n<p>但這有兩個例外，一個是<code class=\\\"language-text\\\">Date</code>物件，另一是<code class=\\\"language-text\\\">Symbol</code>物件，它們覆蓋了原來的<code class=\\\"language-text\\\">PreferredType</code>行為，<code class=\\\"language-text\\\">Date</code>物件的預設首選類型是字串(String)。</p>\\n<blockquote>\\n<p>因此你會看到在一些教學文件上會區分為兩大類物件，一類是 Date 物件，另一類叫 非 Date(non-date) 物件。因為這兩大類的物件在進行轉換為原始資料類型時，首選類型恰好相反。</p>\\n</blockquote>\\n<h3>模擬程式碼說明</h3>\\n<p>以簡單的模擬程式碼來說明，加號運算符(+)的執行過程就是像下面這個模擬碼一樣，我想這會很容易理解:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">a <span class=\\\"token operator\\\">+</span> b<span class=\\\"token punctuation\\\">:</span>\\n    pa <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">ToPrimitive</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">)</span>\\n    pb <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">ToPrimitive</span><span class=\\\"token punctuation\\\">(</span>b<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>pa is string <span class=\\\"token operator\\\">||</span> pb is string<span class=\\\"token punctuation\\\">)</span>\\n       <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">concat</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">ToString</span><span class=\\\"token punctuation\\\">(</span>pa<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">ToString</span><span class=\\\"token punctuation\\\">(</span>pb<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">else</span>\\n       <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">ToNumber</span><span class=\\\"token punctuation\\\">(</span>pa<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">ToNumber</span><span class=\\\"token punctuation\\\">(</span>pb<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>步驟簡單來說就是，運算元都用<code class=\\\"language-text\\\">ToPrimitive</code>先轉換為原始資料類型，然後其一是字串時，使用<code class=\\\"language-text\\\">ToString</code>強制轉換另一個運算元，然後作字串連接運算。要不然，就是都使用<code class=\\\"language-text\\\">ToNumber</code>強制轉換為數字作加法運算。</p>\\n<p>而<code class=\\\"language-text\\\">ToPrimitive</code>在遇到物件類型時，預設呼叫方式是先呼叫<code class=\\\"language-text\\\">valueOf</code>再呼叫<code class=\\\"language-text\\\">toString</code>，一般情況數字類型是首選類型。</p>\\n<p>上面說的<code class=\\\"language-text\\\">ToString</code>與<code class=\\\"language-text\\\">ToNumber</code>這兩個也是 JS 內部的抽象運算。</p>\\n<h2>valueOf 與 toString 方法</h2>\\n<p><code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">ToString</code>是在 Object 中的兩個必有的方法，位於 Object.prototype 上，它是物件要轉為原始資料類型的兩個姐妹方法。從上面的內容已經可以看到，<code class=\\\"language-text\\\">ToPrimitive</code>這個抽象的內部運算，會依照設定的首選的類型，決定要先後呼叫<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>方法的順序，當數字為首選類型時，優先使用<code class=\\\"language-text\\\">valueOf</code>，然後再呼叫<code class=\\\"language-text\\\">toString</code>。當字串為首選類型時，則是相反的順序。預設呼叫方式則是如數字首選類型一樣，是先呼叫<code class=\\\"language-text\\\">valueOf</code>再呼叫<code class=\\\"language-text\\\">toString</code>。</p>\\n<h3>JS 對於 Object 與 Array 的設計</h3>\\n<p>在 JS 中所設計的<code class=\\\"language-text\\\">Object</code>純物件類型的<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>方法，它們的回傳如下:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">valueOf</code>方法回傳值: 物件本身。</li>\\n<li><code class=\\\"language-text\\\">toString</code>方法回傳值: ”[object Object]“字串值，不同的內建物件的回傳值是”[object type]“字串，“type”指的是物件本身的類型識別，例如 Math 物件是回傳”[object Math]“字串。但有些內建物件因為覆蓋了這個方法，所以直接呼叫時不是這種值。(注意: 這個回傳字串的前面的”object”開頭英文是小寫，後面開頭英文是大寫)</li>\\n</ul>\\n<p>你有可能會看過，利用 Object 中的 toString 來進行各種不同物件的判斷語法，這在以前 JS 能用的函式庫或方法不多的年代經常看到，不過它需要配合使用函式中的<code class=\\\"language-text\\\">call</code>方法，才能輸出正確的物件類型值，例如:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> Object<span class=\\\"token punctuation\\\">.</span>prototype<span class=\\\"token punctuation\\\">.</span>toString<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token string\\\">\\\"[object Array]\\\"</span>\\n\\n<span class=\\\"token operator\\\">></span> Object<span class=\\\"token punctuation\\\">.</span>prototype<span class=\\\"token punctuation\\\">.</span>toString<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token string\\\">\\\"[object Date]\\\"</span></code></pre>\\n      </div>\\n<p>所以，從上面的內容就可以知道，下面的這段程式碼的結果會是呼叫到<code class=\\\"language-text\\\">toString</code>方法(因為<code class=\\\"language-text\\\">valueOf</code>方法的回傳並不是原始的資料類型):</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token string\\\">\\\"1[object Object]\\\"</span></code></pre>\\n      </div>\\n<p>一元正號(+)，具有讓首選類型(也就是 hint)設置為數字(Number)的功能，所以可以強制讓物件轉為數字類型，一般的物件會轉為:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">;</span><span class=\\\"token operator\\\">+</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token comment\\\">//相當於 +\\\"[object Object]\\\"</span>\\n<span class=\\\"token comment\\\">// NaN</span></code></pre>\\n      </div>\\n<p>當然，物件的這兩個方法都可以被覆蓋，你可以用下面的程式碼來觀察這兩個方法的執行順序，下面這個都是先呼叫<code class=\\\"language-text\\\">valueOf</code>的情況:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> obj <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  valueOf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'valueOf'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token comment\\\">// object</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  toString<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'toString'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">'obj'</span> <span class=\\\"token comment\\\">// string</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//valueOf -> toString -> '1obj'</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">+</span>obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//valueOf -> toString -> NaN</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span> <span class=\\\"token operator\\\">+</span> obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//valueOf -> toString -> 'obj'</span></code></pre>\\n      </div>\\n<p>先呼叫<code class=\\\"language-text\\\">toString</code>的情況比較少見，大概只有<code class=\\\"language-text\\\">Date</code>物件或強制要轉換為字串時才會看到:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> obj <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  valueOf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'valueOf'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token comment\\\">// number</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  toString<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'toString'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token comment\\\">// object</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//toString -> valueOf -> alert(\\\"1\\\");</span>\\n<span class=\\\"token function\\\">String</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//toString -> valueOf -> \\\"1\\\";</span></code></pre>\\n      </div>\\n<p>而下面這個例子會造成錯誤，因為不論順序是如何都得不到原始資料類型的值，錯誤訊息是”TypeError: Cannot convert object to primitive value”，從這個訊息中很明白的告訴你，它這裡面會需要轉換物件到原始資料類型:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> obj <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  valueOf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'valueOf'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token comment\\\">// object</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  toString<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'toString'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token comment\\\">// string</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>obj <span class=\\\"token operator\\\">+</span> obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//valueOf -> toString -> error!</span></code></pre>\\n      </div>\\n<p>Array(陣列)很常用到，雖然它是個物件類型，但它與 Object 的設計不同，它的<code class=\\\"language-text\\\">toString</code>有覆蓋，說明一下陣列的<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>的兩個方法的回傳值:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">valueOf</code>方法回傳值: 物件本身。(與 Object 一樣)</li>\\n<li><code class=\\\"language-text\\\">toString</code>方法回傳值: 相當於用陣列值呼叫<code class=\\\"language-text\\\">join(&#39;,&#39;)</code>所回傳的字串。也就是<code class=\\\"language-text\\\">[1,2,3].toString()</code>會是<code class=\\\"language-text\\\">&quot;1,2,3&quot;</code>，這點要特別注意。</li>\\n</ul>\\n<p>Function 物件很少會用到，它的<code class=\\\"language-text\\\">toString</code>也有被覆蓋，所以並不是 Object 中的那個<code class=\\\"language-text\\\">toString</code>，Function 物件的<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>的兩個方法的回傳值:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">valueOf</code>方法回傳值: 物件本身。(與 Object 一樣)</li>\\n<li><code class=\\\"language-text\\\">toString</code>方法回傳值: 函式中包含的程式碼轉為字串值</li>\\n</ul>\\n<h3>Number、String、Boolean 三個包裝物件</h3>\\n<p>包裝物件是 JS 為原始資料類型數字、字串、布林專門設計的物件，所有的這三種原始資料類型所使用到的屬性與方法，都是在這上面所提供。</p>\\n<p>包裝物件的<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>的兩個方法在原型上有經過覆蓋，所以它們的回傳值與一般的 Object 的設計不同:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">valueOf</code>方法回傳值: 對應的原始資料類型值</li>\\n<li><code class=\\\"language-text\\\">toString</code>方法回傳值: 對應的原始資料類型值，轉換為字串類型時的字串值</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">toString</code>方法會比較特別，這三個包裝物件裡的<code class=\\\"language-text\\\">toString</code>的細部說明如下:</p>\\n<ul>\\n<li>Number 包裝物件的<code class=\\\"language-text\\\">toString</code>方法: 可以有一個傳入參數，可以決定轉換為字串時的進位(2、8、16)</li>\\n<li>String 包裝物件的<code class=\\\"language-text\\\">toString</code>方法: 與 String 包裝物件中的<code class=\\\"language-text\\\">valueOf</code>相同回傳結果</li>\\n<li>Boolean 包裝物件的<code class=\\\"language-text\\\">toString</code>方法: 回傳”true”或”false”字串</li>\\n</ul>\\n<p>另外，常被搞混的是直接使用<code class=\\\"language-text\\\">Number()</code>、<code class=\\\"language-text\\\">String()</code>與<code class=\\\"language-text\\\">Boolean()</code>三個強制轉換函式的用法，這與包裝物件的用法不同，包裝物件是必須使用<code class=\\\"language-text\\\">new</code>關鍵字進行物件實體化的，例如<code class=\\\"language-text\\\">new Number(123)</code>，而<code class=\\\"language-text\\\">Number(&#39;123&#39;)</code>則是強制轉換其他類型為數字類型的函式。</p>\\n<p><code class=\\\"language-text\\\">Number()</code>、<code class=\\\"language-text\\\">String()</code>與<code class=\\\"language-text\\\">Boolean()</code>三個強制轉換函式，所對應的就是在 ECMAScript 標準中的<code class=\\\"language-text\\\">ToNumber</code>、<code class=\\\"language-text\\\">ToString</code>、<code class=\\\"language-text\\\">ToBoolean</code>三個內部運算轉換的對照表。而當它們要轉換物件類型前，會先用上面說的<code class=\\\"language-text\\\">ToPrimitive</code>先轉換物件為原始資料類型，再進行轉換到所要的類型值。</p>\\n<p>不管如何，包裝物件很少會被使用到，一般我們只會直接使用原始資料類型的值。而強制轉換函式因為也有取代的語法，它們會被用到的機會也不多。</p>\\n<h2>應用實例</h2>\\n<h3>字串 + 其他原始類型</h3>\\n<p>字串在加號運算有最高的優先運算，與字串相加必定是字串連接運算(concatenation)。所有的其他原始資料類型轉為字串，可以參考 ECMAScript 標準中的<a href=\\\"http://www.ecma-international.org/ecma-262/6.0/#sec-tostring\\\">ToString</a>對照表，以下為一些簡單的範例:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">'1'</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">123</span>\\n<span class=\\\"token string\\\">\\\"1123\\\"</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">'1'</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token boolean\\\">false</span>\\n<span class=\\\"token string\\\">\\\"1false\\\"</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">'1'</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token keyword\\\">null</span>\\n<span class=\\\"token string\\\">\\\"1null\\\"</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">'1'</span> <span class=\\\"token operator\\\">+</span> undefined\\n<span class=\\\"token string\\\">\\\"1undefined\\\"</span></code></pre>\\n      </div>\\n<h3>數字 + 其他的非字串的原始資料類型</h3>\\n<p>數字與其他類型作相加時，除了字串會優先使用字串連接運算(concatenation)的，其他都要依照數字為優先，所以除了字串之外的其他原始資料類型，都要轉換為數字來進行數學的相加運算。如果明白這項規則，就會很容易的得出加法運算的結果。</p>\\n<p>所有轉為數字類型可以參考 ECMAScript 標準中的<a href=\\\"http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber\\\">ToNumber</a>對照表，以下為一些簡單的範例:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token comment\\\">//true轉為1, false轉為0</span>\\n<span class=\\\"token number\\\">2</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token keyword\\\">null</span> <span class=\\\"token comment\\\">//null轉為0</span>\\n<span class=\\\"token number\\\">1</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> undefined <span class=\\\"token comment\\\">//null轉為NaN</span>\\n<span class=\\\"token number\\\">NaN</span></code></pre>\\n      </div>\\n<h3>數字/字串以外的原始資料類型作加法運算</h3>\\n<p>所以，當數字與字串以外的其他原始資料類型直接使用加號運算時，就是轉為數字再運算，這與字串無關。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token boolean\\\">true</span>\\n<span class=\\\"token number\\\">2</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token keyword\\\">null</span>\\n<span class=\\\"token number\\\">1</span>\\n\\n<span class=\\\"token operator\\\">></span> undefined <span class=\\\"token operator\\\">+</span> <span class=\\\"token keyword\\\">null</span>\\n<span class=\\\"token number\\\">NaN</span></code></pre>\\n      </div>\\n<h3>空陣列 + 空陣列</h3>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token string\\\">\\\"\\\"</span></code></pre>\\n      </div>\\n<p>兩個陣列相加，依然按照<code class=\\\"language-text\\\">valueOf -&gt; toString</code>的順序，但因為<code class=\\\"language-text\\\">valueOf</code>是陣列本身，所以會以<code class=\\\"language-text\\\">toString</code>的回傳值才是原始資料類型，也就是空字串，所以這個運算相當於兩個空字串在相加，依照加法運算規則第 2 步驟，是字串連接運算(concatenation)，兩個空字串連接最後得出一個空字串。</p>\\n<h3>空物件 + 空物件</h3>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token string\\\">\\\"[object Object][object Object]\\\"</span></code></pre>\\n      </div>\\n<p>兩個空物件相加，依然按照<code class=\\\"language-text\\\">valueOf -&gt; toString</code>的順序，但因為<code class=\\\"language-text\\\">valueOf</code>是物件本身，所以會以<code class=\\\"language-text\\\">toString</code>的回傳值才是原始資料類型，也就是”[object Object]“字串，所以這個運算相當於兩個”[object Object]“字串在相加，依照加法運算規則第 2 步驟，是字串連接運算(concatenation)，最後得出一個”<a href=\\\"\\\">object Object</a>“字串。</p>\\n<p>但是這個結果有例外，上面的結果只是在 Chrome 瀏覽器上的結果(v55)，怎麼說呢？</p>\\n<p>有些瀏覽器例如 Firefox、Edge 瀏覽器會把<code class=\\\"language-text\\\">{} + {}</code>直譯為相當於<code class=\\\"language-text\\\">+{}</code>語句，因為它們會認為以花括號開頭(<code class=\\\"language-text\\\">{</code>)的，是一個區塊語句的開頭，而不是一個物件字面量的語句，所以會認為略過第一個<code class=\\\"language-text\\\">{}</code>，把它認為是個<code class=\\\"language-text\\\">+{}</code>的語句，也就是相當於強制求出數字值的<code class=\\\"language-text\\\">Number({})</code>運算，相當於<code class=\\\"language-text\\\">Number(&quot;[object Object]&quot;)</code>運算，最後得出的是<code class=\\\"language-text\\\">NaN</code>。</p>\\n<blockquote>\\n<p>特別注意: <code class=\\\"language-text\\\">{} + {}</code>在不同的瀏覽器有不同結果</p>\\n</blockquote>\\n<p>如果在第一個(前面)的空物件加上圓括號(<code class=\\\"language-text\\\">()</code>)，這樣 JS 就會認為前面是個物件，就可以得出同樣的結果:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token string\\\">\\\"[object Object][object Object]\\\"</span></code></pre>\\n      </div>\\n<p>或是分開來先定義物件的變數值，也可以得出同樣的結果，像下面這樣:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">let</span> foo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> bar <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token operator\\\">></span> foo <span class=\\\"token operator\\\">+</span> bar<span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<blockquote>\\n<p>註: 上面說的行為這與加號運算的第一個(前面)的物件字面值是不是個空物件無關，就算是裡面有值的物件字面，例如<code class=\\\"language-text\\\">{a:1, b:2}</code>，也是同樣的結果。</p>\\n</blockquote>\\n<h3>空物件 + 空陣列</h3>\\n<p>上面同樣的把<code class=\\\"language-text\\\">{}</code>當作區塊語句的情況又會發生，不過這次所有的瀏覽器都會有一致結果，如果<code class=\\\"language-text\\\">{}</code>(空物件)在前面，而<code class=\\\"language-text\\\">[]</code>(空陣列)在後面時，前面那個會被認為是區塊而不是物件。</p>\\n<p>所以<code class=\\\"language-text\\\">{} + []</code>相當於<code class=\\\"language-text\\\">+[]</code>語句，也就是相當於強制求出數字值的<code class=\\\"language-text\\\">Number([])</code>運算，相當於<code class=\\\"language-text\\\">Number(&quot;&quot;)</code>運算，最後得出的是<code class=\\\"language-text\\\">0</code>數字。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token number\\\">0</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token string\\\">\\\"[object Object]\\\"</span></code></pre>\\n      </div>\\n<blockquote>\\n<p>特別注意: 所以如果第一個(前面)是<code class=\\\"language-text\\\">{}</code>時，後面加上其他的像陣列、數字或字串，這時候加號運算會直接變為一元正號運算，也就是強制轉為數字的運算。這是個陷阱要小心。</p>\\n</blockquote>\\n<h3>Date 物件</h3>\\n<p>Date 物件的<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>的兩個方法的回傳值:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">valueOf</code>方法回傳值:</li>\\n<li><code class=\\\"language-text\\\">toString</code>方法回傳值:</li>\\n</ul>\\n<p>Date 物件上面有提及是首選類型為”字串”的一種例外的物件，這與其他的物件的行為不同(一般物件會先呼叫<code class=\\\"language-text\\\">valueOf</code>再呼叫<code class=\\\"language-text\\\">toString</code>)，在進行加號運算時時，它會優先使用<code class=\\\"language-text\\\">toString</code>來進行轉換，最後必定是字串連接運算(concatenation)，例如以下的結果:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">\\\"1Sun Nov 27 2016 01:09:03 GMT+0800 (CST)\\\"</span></code></pre>\\n      </div>\\n<p>要得出 Date 物件中的<code class=\\\"language-text\\\">valueOf</code>回傳值，需要使用一元加號(+)，來強制轉換它為數字類型，例如以下的程式碼:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">+</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token number\\\">1480180751492</span></code></pre>\\n      </div>\\n<h3>Symbols 類型</h3>\\n<p>ES6 中新加入的 Symbols 資料類型，它不算是值也不是物件，所以完全不能直接用於加法運算，它並沒有內部自動轉型的設計，使用時會報錯。</p>\\n<h2>結論</h2>\\n<p><code class=\\\"language-text\\\">{} + {}</code>的結果是會因瀏覽器而有不同結果，Chrome 中是<code class=\\\"language-text\\\">[object Object][object Object]</code>字串連接，但其它的瀏覽器則是認為相當於<code class=\\\"language-text\\\">+{}</code>運算，得出<code class=\\\"language-text\\\">NaN</code>數字類型。</p>\\n<p><code class=\\\"language-text\\\">{} + []</code>的結果是相當於<code class=\\\"language-text\\\">+[]</code>，結果是<code class=\\\"language-text\\\">0</code>數字類型。</p>\\n<h2>參考資料</h2>\\n<ul>\\n<li><a href=\\\"http://www.2ality.com/2012/01/object-plus-object.html\\\">What is {} + {} in JavaScript?</a></li>\\n</ul>\",\"htmlAst\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"在 JS 中的運算符共同的情況中，(+)符號是很常見的一種，它有以下的使用情況:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"數字的加法運算，二元運算\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"字串的連接運算，二元運算，最高優先\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"正號，一元運算，可延伸為強制轉換其他類型的運算元為數字類型\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"當然，如果考慮多個符號一起使用時，(+=)與(++)又是另外的用途。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"另一個常見的是花括號({})，它有兩個用途也很常見:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"物件的字面文字定義\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"區塊語句\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"所以，要能回答這個問題，要先搞清楚重點是什麼？\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"第一個重點是:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"加號(+)運算在 JS 中在使用上的規定是什麼。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"第二個重點則是:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"物件在 JS 中是怎麼轉換為原始資料類型的值的。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"加號運算符(+)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"除了上面說明的常見情況外，在標準中轉換的規則還有以下幾個，要注意它的順序:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"operand + operand = result\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"運算轉換左與右運算元為原始資料類型值(primitive)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"在第 1 步轉換後，如果有運算元出現原始資料類型是”字串”類型值時，則另一運算元作強制轉換為字串，然後作字串的連接運算(concatenation)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"在其他情況時，所有運算元都會轉換為原始資料類型的”數字”類型值，然後作數學的相加運算(addition)\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive 內部運算\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"因此，加號運算符只能使用於原始資料類型，那麼對於物件類型的值，要如何轉換為原始資料類型？下面說明是如何轉換為原始資料類型的。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"在\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive\"},\"children\":[{\"type\":\"text\",\"value\":\"ECMAScript 6th Edition #7.1.1\"}]},{\"type\":\"text\",\"value\":\"，有一個抽象的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"運算，它會用於物件轉換為原始資料類型，這個運算不只會用在加號運算符，也會用在關係比較或值相等比較的運算中。下面有關於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"的說明語法:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive(input, PreferredType?)\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"代表代入的值，而\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"PreferredType\"}]},{\"type\":\"text\",\"value\":\"可以是數字(Number)或字串(String)其中一種，這會代表”優先的”、“首選的”的要進行轉換到哪一種原始類型，轉換的步驟會依這裡的值而有所不同。但如果沒有提供這個值也就是預設情況，則會設定轉換的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"hint\"}]},{\"type\":\"text\",\"value\":\"值為\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"default\\\"\"}]},{\"type\":\"text\",\"value\":\"。這個首選的轉換原始類型的指示(\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"hint\"}]},{\"type\":\"text\",\"value\":\"值)，是在作內部轉換時由 JS 視情況自動加上的，一般情況就是預設值。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"而在 JS 的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Object\"}]},{\"type\":\"text\",\"value\":\"原型的設計中，都一定會有兩個\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法，所以這兩個方法在所有物件裡面都會有，不過它們在轉換有可能會交換被呼叫的順序。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"當 PreferredType 為數字(Number)時\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"當\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"PreferredType\"}]},{\"type\":\"text\",\"value\":\"為數字(Number)時，\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"為要被轉換的值，以下是轉換這個\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"值的步驟:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"是原始資料類型，則直接回傳\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"否則，如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"是個物件時，則呼叫物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf()\"}]},{\"type\":\"text\",\"value\":\"方法，如果能得到原始資料類型的值，則回傳這個值。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"否則，如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"是個物件時，呼叫物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString()\"}]},{\"type\":\"text\",\"value\":\"方法，如果能得到原始資料類型的值，則回傳這個值。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"否則，拋出 TypeError 錯誤。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"當 PreferredType 為字串(String)時\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"上面的步驟 2 與 3 對調，如同下面所說:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"是原始資料類型，則直接回傳\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"否則，如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"是個物件時，呼叫物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString()\"}]},{\"type\":\"text\",\"value\":\"方法，如果能得到原始資料類型的值，則回傳這個值。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"否則，如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"是個物件時，則呼叫物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf()\"}]},{\"type\":\"text\",\"value\":\"方法，如果能得到原始資料類型的值，則回傳這個值。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"否則，拋出 TypeError 錯誤。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"PreferredType 沒提供時，也就是 hint 為”default”時\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"PreferredType\"}]},{\"type\":\"text\",\"value\":\"為數字(Number)時的步驟相同。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"數字\"}]},{\"type\":\"text\",\"value\":\"其實是預設的首選類型，也就是說在一般情況下，加號運算中的物件要作轉型時，都是先呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"再呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"但這有兩個例外，一個是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Date\"}]},{\"type\":\"text\",\"value\":\"物件，另一是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Symbol\"}]},{\"type\":\"text\",\"value\":\"物件，它們覆蓋了原來的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"PreferredType\"}]},{\"type\":\"text\",\"value\":\"行為，\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Date\"}]},{\"type\":\"text\",\"value\":\"物件的預設首選類型是字串(String)。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"因此你會看到在一些教學文件上會區分為兩大類物件，一類是 Date 物件，另一類叫 非 Date(non-date) 物件。因為這兩大類的物件在進行轉換為原始資料類型時，首選類型恰好相反。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"模擬程式碼說明\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"以簡單的模擬程式碼來說明，加號運算符(+)的執行過程就是像下面這個模擬碼一樣，我想這會很容易理解:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"text\",\"value\":\"a \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" b\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\"\\n    pa \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"a\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    pb \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"b\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"if\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"pa is string \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"||\"}]},{\"type\":\"text\",\"value\":\" pb is string\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n       \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"concat\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"pa\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"pb\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"else\"}]},{\"type\":\"text\",\"value\":\"\\n       \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"add\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToNumber\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"pa\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToNumber\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"pb\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"步驟簡單來說就是，運算元都用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"先轉換為原始資料類型，然後其一是字串時，使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"text\",\"value\":\"強制轉換另一個運算元，然後作字串連接運算。要不然，就是都使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToNumber\"}]},{\"type\":\"text\",\"value\":\"強制轉換為數字作加法運算。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"而\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"在遇到物件類型時，預設呼叫方式是先呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"再呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"，一般情況數字類型是首選類型。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"上面說的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToNumber\"}]},{\"type\":\"text\",\"value\":\"這兩個也是 JS 內部的抽象運算。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"valueOf 與 toString 方法\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"text\",\"value\":\"是在 Object 中的兩個必有的方法，位於 Object.prototype 上，它是物件要轉為原始資料類型的兩個姐妹方法。從上面的內容已經可以看到，\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"這個抽象的內部運算，會依照設定的首選的類型，決定要先後呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法的順序，當數字為首選類型時，優先使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"，然後再呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"。當字串為首選類型時，則是相反的順序。預設呼叫方式則是如數字首選類型一樣，是先呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"再呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"JS 對於 Object 與 Array 的設計\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"在 JS 中所設計的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Object\"}]},{\"type\":\"text\",\"value\":\"純物件類型的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法，它們的回傳如下:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 物件本身。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: ”[object Object]“字串值，不同的內建物件的回傳值是”[object type]“字串，“type”指的是物件本身的類型識別，例如 Math 物件是回傳”[object Math]“字串。但有些內建物件因為覆蓋了這個方法，所以直接呼叫時不是這種值。(注意: 這個回傳字串的前面的”object”開頭英文是小寫，後面開頭英文是大寫)\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"你有可能會看過，利用 Object 中的 toString 來進行各種不同物件的判斷語法，這在以前 JS 能用的函式庫或方法不多的年代經常看到，不過它需要配合使用函式中的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"call\"}]},{\"type\":\"text\",\"value\":\"方法，才能輸出正確的物件類型值，例如:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" Object\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"prototype\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"toString\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"call\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"[\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"]\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"[object Array]\\\"\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" Object\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"prototype\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"toString\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"call\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"new\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"class-name\"]},\"children\":[{\"type\":\"text\",\"value\":\"Date\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"[object Date]\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"所以，從上面的內容就可以知道，下面的這段程式碼的結果會是呼叫到\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法(因為\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"方法的回傳並不是原始的資料類型):\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1[object Object]\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"一元正號(+)，具有讓首選類型(也就是 hint)設置為數字(Number)的功能，所以可以強制讓物件轉為數字類型，一般的物件會轉為:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\";\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//相當於 +\\\"[object Object]\\\"\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// NaN\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"當然，物件的這兩個方法都可以被覆蓋，你可以用下面的程式碼來觀察這兩個方法的執行順序，下面這個都是先呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"的情況:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"let\"}]},{\"type\":\"text\",\"value\":\" obj \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n  valueOf\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n    console\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'valueOf'\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// object\"}]},{\"type\":\"text\",\"value\":\"\\n  \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\"\\n  toString\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n    console\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'toString'\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'obj'\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// string\"}]},{\"type\":\"text\",\"value\":\"\\n  \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\nconsole\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" obj\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//valueOf -> toString -> '1obj'\"}]},{\"type\":\"text\",\"value\":\"\\nconsole\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\"obj\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//valueOf -> toString -> NaN\"}]},{\"type\":\"text\",\"value\":\"\\nconsole\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"''\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" obj\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//valueOf -> toString -> 'obj'\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"先呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的情況比較少見，大概只有\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Date\"}]},{\"type\":\"text\",\"value\":\"物件或強制要轉換為字串時才會看到:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"let\"}]},{\"type\":\"text\",\"value\":\" obj \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n  valueOf\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n    console\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'valueOf'\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// number\"}]},{\"type\":\"text\",\"value\":\"\\n  \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\"\\n  toString\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n    console\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'toString'\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// object\"}]},{\"type\":\"text\",\"value\":\"\\n  \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"alert\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"obj\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//toString -> valueOf -> alert(\\\"1\\\");\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"String\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"obj\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//toString -> valueOf -> \\\"1\\\";\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"而下面這個例子會造成錯誤，因為不論順序是如何都得不到原始資料類型的值，錯誤訊息是”TypeError: Cannot convert object to primitive value”，從這個訊息中很明白的告訴你，它這裡面會需要轉換物件到原始資料類型:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"let\"}]},{\"type\":\"text\",\"value\":\" obj \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n  valueOf\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n    console\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'valueOf'\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// object\"}]},{\"type\":\"text\",\"value\":\"\\n  \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\"\\n  toString\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n    console\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'toString'\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// string\"}]},{\"type\":\"text\",\"value\":\"\\n  \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\n\\nconsole\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"obj \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" obj\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//valueOf -> toString -> error!\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Array(陣列)很常用到，雖然它是個物件類型，但它與 Object 的設計不同，它的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"有覆蓋，說明一下陣列的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的兩個方法的回傳值:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 物件本身。(與 Object 一樣)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 相當於用陣列值呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"join(',')\"}]},{\"type\":\"text\",\"value\":\"所回傳的字串。也就是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"[1,2,3].toString()\"}]},{\"type\":\"text\",\"value\":\"會是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1,2,3\\\"\"}]},{\"type\":\"text\",\"value\":\"，這點要特別注意。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Function 物件很少會用到，它的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"也有被覆蓋，所以並不是 Object 中的那個\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"，Function 物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的兩個方法的回傳值:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 物件本身。(與 Object 一樣)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 函式中包含的程式碼轉為字串值\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Number、String、Boolean 三個包裝物件\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"包裝物件是 JS 為原始資料類型數字、字串、布林專門設計的物件，所有的這三種原始資料類型所使用到的屬性與方法，都是在這上面所提供。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"包裝物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的兩個方法在原型上有經過覆蓋，所以它們的回傳值與一般的 Object 的設計不同:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 對應的原始資料類型值\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 對應的原始資料類型值，轉換為字串類型時的字串值\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法會比較特別，這三個包裝物件裡的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的細部說明如下:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Number 包裝物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法: 可以有一個傳入參數，可以決定轉換為字串時的進位(2、8、16)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"String 包裝物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法: 與 String 包裝物件中的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"相同回傳結果\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Boolean 包裝物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法: 回傳”true”或”false”字串\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"另外，常被搞混的是直接使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number()\"}]},{\"type\":\"text\",\"value\":\"、\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"String()\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Boolean()\"}]},{\"type\":\"text\",\"value\":\"三個強制轉換函式的用法，這與包裝物件的用法不同，包裝物件是必須使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"new\"}]},{\"type\":\"text\",\"value\":\"關鍵字進行物件實體化的，例如\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"new Number(123)\"}]},{\"type\":\"text\",\"value\":\"，而\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number('123')\"}]},{\"type\":\"text\",\"value\":\"則是強制轉換其他類型為數字類型的函式。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number()\"}]},{\"type\":\"text\",\"value\":\"、\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"String()\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Boolean()\"}]},{\"type\":\"text\",\"value\":\"三個強制轉換函式，所對應的就是在 ECMAScript 標準中的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToNumber\"}]},{\"type\":\"text\",\"value\":\"、\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"text\",\"value\":\"、\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToBoolean\"}]},{\"type\":\"text\",\"value\":\"三個內部運算轉換的對照表。而當它們要轉換物件類型前，會先用上面說的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"先轉換物件為原始資料類型，再進行轉換到所要的類型值。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"不管如何，包裝物件很少會被使用到，一般我們只會直接使用原始資料類型的值。而強制轉換函式因為也有取代的語法，它們會被用到的機會也不多。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"應用實例\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"字串 + 其他原始類型\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"字串在加號運算有最高的優先運算，與字串相加必定是字串連接運算(concatenation)。所有的其他原始資料類型轉為字串，可以參考 ECMAScript 標準中的\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://www.ecma-international.org/ecma-262/6.0/#sec-tostring\"},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"text\",\"value\":\"對照表，以下為一些簡單的範例:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'1'\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"123\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1123\\\"\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'1'\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"boolean\"]},\"children\":[{\"type\":\"text\",\"value\":\"false\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1false\\\"\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'1'\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"null\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1null\\\"\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'1'\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" undefined\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1undefined\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"數字 + 其他的非字串的原始資料類型\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"數字與其他類型作相加時，除了字串會優先使用字串連接運算(concatenation)的，其他都要依照數字為優先，所以除了字串之外的其他原始資料類型，都要轉換為數字來進行數學的相加運算。如果明白這項規則，就會很容易的得出加法運算的結果。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"所有轉為數字類型可以參考 ECMAScript 標準中的\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber\"},\"children\":[{\"type\":\"text\",\"value\":\"ToNumber\"}]},{\"type\":\"text\",\"value\":\"對照表，以下為一些簡單的範例:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"boolean\"]},\"children\":[{\"type\":\"text\",\"value\":\"true\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//true轉為1, false轉為0\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"2\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"null\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//null轉為0\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" undefined \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//null轉為NaN\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"NaN\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"數字/字串以外的原始資料類型作加法運算\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"所以，當數字與字串以外的其他原始資料類型直接使用加號運算時，就是轉為數字再運算，這與字串無關。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"boolean\"]},\"children\":[{\"type\":\"text\",\"value\":\"true\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"boolean\"]},\"children\":[{\"type\":\"text\",\"value\":\"true\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"2\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"boolean\"]},\"children\":[{\"type\":\"text\",\"value\":\"true\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"null\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" undefined \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"null\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"NaN\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"空陣列 + 空陣列\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"[\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"]\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"[\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"]\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"兩個陣列相加，依然按照\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf -> toString\"}]},{\"type\":\"text\",\"value\":\"的順序，但因為\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"是陣列本身，所以會以\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的回傳值才是原始資料類型，也就是空字串，所以這個運算相當於兩個空字串在相加，依照加法運算規則第 2 步驟，是字串連接運算(concatenation)，兩個空字串連接最後得出一個空字串。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"空物件 + 空物件\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"[object Object][object Object]\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"兩個空物件相加，依然按照\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf -> toString\"}]},{\"type\":\"text\",\"value\":\"的順序，但因為\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"是物件本身，所以會以\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的回傳值才是原始資料類型，也就是”[object Object]“字串，所以這個運算相當於兩個”[object Object]“字串在相加，依照加法運算規則第 2 步驟，是字串連接運算(concatenation)，最後得出一個”\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"object Object\"}]},{\"type\":\"text\",\"value\":\"“字串。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"但是這個結果有例外，上面的結果只是在 Chrome 瀏覽器上的結果(v55)，怎麼說呢？\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"有些瀏覽器例如 Firefox、Edge 瀏覽器會把\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{} + {}\"}]},{\"type\":\"text\",\"value\":\"直譯為相當於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"+{}\"}]},{\"type\":\"text\",\"value\":\"語句，因為它們會認為以花括號開頭(\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\")的，是一個區塊語句的開頭，而不是一個物件字面量的語句，所以會認為略過第一個\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{}\"}]},{\"type\":\"text\",\"value\":\"，把它認為是個\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"+{}\"}]},{\"type\":\"text\",\"value\":\"的語句，也就是相當於強制求出數字值的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number({})\"}]},{\"type\":\"text\",\"value\":\"運算，相當於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number(\\\"[object Object]\\\")\"}]},{\"type\":\"text\",\"value\":\"運算，最後得出的是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"NaN\"}]},{\"type\":\"text\",\"value\":\"。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"特別注意: \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{} + {}\"}]},{\"type\":\"text\",\"value\":\"在不同的瀏覽器有不同結果\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果在第一個(前面)的空物件加上圓括號(\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"()\"}]},{\"type\":\"text\",\"value\":\")，這樣 JS 就會認為前面是個物件，就可以得出同樣的結果:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"[object Object][object Object]\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"或是分開來先定義物件的變數值，也可以得出同樣的結果，像下面這樣:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"let\"}]},{\"type\":\"text\",\"value\":\" foo \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\" bar \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\";\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" foo \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" bar\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\";\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"註: 上面說的行為這與加號運算的第一個(前面)的物件字面值是不是個空物件無關，就算是裡面有值的物件字面，例如\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{a:1, b:2}\"}]},{\"type\":\"text\",\"value\":\"，也是同樣的結果。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"空物件 + 空陣列\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"上面同樣的把\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{}\"}]},{\"type\":\"text\",\"value\":\"當作區塊語句的情況又會發生，不過這次所有的瀏覽器都會有一致結果，如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{}\"}]},{\"type\":\"text\",\"value\":\"(空物件)在前面，而\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"[]\"}]},{\"type\":\"text\",\"value\":\"(空陣列)在後面時，前面那個會被認為是區塊而不是物件。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"所以\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{} + []\"}]},{\"type\":\"text\",\"value\":\"相當於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"+[]\"}]},{\"type\":\"text\",\"value\":\"語句，也就是相當於強制求出數字值的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number([])\"}]},{\"type\":\"text\",\"value\":\"運算，相當於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number(\\\"\\\")\"}]},{\"type\":\"text\",\"value\":\"運算，最後得出的是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"0\"}]},{\"type\":\"text\",\"value\":\"數字。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"[\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"]\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"0\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"[\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"]\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"[object Object]\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"特別注意: 所以如果第一個(前面)是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{}\"}]},{\"type\":\"text\",\"value\":\"時，後面加上其他的像陣列、數字或字串，這時候加號運算會直接變為一元正號運算，也就是強制轉為數字的運算。這是個陷阱要小心。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Date 物件\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Date 物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的兩個方法的回傳值:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"方法回傳值:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法回傳值:\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Date 物件上面有提及是首選類型為”字串”的一種例外的物件，這與其他的物件的行為不同(一般物件會先呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"再呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\")，在進行加號運算時時，它會優先使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"來進行轉換，最後必定是字串連接運算(concatenation)，例如以下的結果:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"new\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"class-name\"]},\"children\":[{\"type\":\"text\",\"value\":\"Date\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1Sun Nov 27 2016 01:09:03 GMT+0800 (CST)\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"要得出 Date 物件中的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"回傳值，需要使用一元加號(+)，來強制轉換它為數字類型，例如以下的程式碼:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"new\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"class-name\"]},\"children\":[{\"type\":\"text\",\"value\":\"Date\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1480180751492\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Symbols 類型\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"ES6 中新加入的 Symbols 資料類型，它不算是值也不是物件，所以完全不能直接用於加法運算，它並沒有內部自動轉型的設計，使用時會報錯。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"結論\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{} + {}\"}]},{\"type\":\"text\",\"value\":\"的結果是會因瀏覽器而有不同結果，Chrome 中是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"[object Object][object Object]\"}]},{\"type\":\"text\",\"value\":\"字串連接，但其它的瀏覽器則是認為相當於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"+{}\"}]},{\"type\":\"text\",\"value\":\"運算，得出\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"NaN\"}]},{\"type\":\"text\",\"value\":\"數字類型。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{} + []\"}]},{\"type\":\"text\",\"value\":\"的結果是相當於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"+[]\"}]},{\"type\":\"text\",\"value\":\"，結果是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"0\"}]},{\"type\":\"text\",\"value\":\"數字類型。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"參考資料\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://www.2ality.com/2012/01/object-plus-object.html\"},\"children\":[{\"type\":\"text\",\"value\":\"What is {} + {} in JavaScript?\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"}]}],\"data\":{\"quirksMode\":false}},\"fields\":{\"slug\":\"/js-object-plus-object/\",\"prefix\":\"2017-01-06\"},\"frontmatter\":{\"title\":\"JS中的 {} + {} 與 {} + [] 的結果是什麼？\",\"subTitle\":\"What is {} + {} and {} + [] in JS\",\"cover\":{\"childImageSharp\":{\"resize\":{\"src\":\"/static/js-e913ee06a329636f87ee127d80c07295-ada8c.jpg\"}}}}},\"author\":{\"id\":\"/Volumes/Zero/gatsby/eddychangme/content/parts/author.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>作者: <strong>Eddy Chang</strong></p>\"},\"footnote\":{\"id\":\"/Volumes/Zero/gatsby/eddychangme/content/parts/footnote.md absPath of file >>> MarkdownRemark\",\"html\":\"<ul>\\n<li>本站所有內容係採用 <a href=\\\"https://creativecommons.org/licenses/by-sa/4.0/\\\">創用 CC 姓名標示-相同方式分享 4.0 國際</a> 授權條款授權</li>\\n</ul>\"},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"441411672723522\"}}}},\"pathContext\":{\"slug\":\"/js-object-plus-object/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---js-object-plus-object-f461d68f837392433626.js","module.exports = {\"data\":{\"post\":{\"id\":\"/Volumes/Zero/gatsby/eddychangme/content/posts/2017-01-06--js-object-plus-object/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>在 JS 中的運算符共同的情況中，(+)符號是很常見的一種，它有以下的使用情況:</p>\\n<ul>\\n<li>數字的加法運算，二元運算</li>\\n<li>字串的連接運算，二元運算，最高優先</li>\\n<li>正號，一元運算，可延伸為強制轉換其他類型的運算元為數字類型</li>\\n</ul>\\n<p>當然，如果考慮多個符號一起使用時，(+=)與(++)又是另外的用途。</p>\\n<p>另一個常見的是花括號({})，它有兩個用途也很常見:</p>\\n<ul>\\n<li>物件的字面文字定義</li>\\n<li>區塊語句</li>\\n</ul>\\n<p>所以，要能回答這個問題，要先搞清楚重點是什麼？</p>\\n<p>第一個重點是:</p>\\n<blockquote>\\n<p>加號(+)運算在 JS 中在使用上的規定是什麼。</p>\\n</blockquote>\\n<p>第二個重點則是:</p>\\n<blockquote>\\n<p>物件在 JS 中是怎麼轉換為原始資料類型的值的。</p>\\n</blockquote>\\n<h2>加號運算符(+)</h2>\\n<p>除了上面說明的常見情況外，在標準中轉換的規則還有以下幾個，要注意它的順序:</p>\\n<blockquote>\\n<p>operand + operand = result</p>\\n</blockquote>\\n<ol>\\n<li>使用<code class=\\\"language-text\\\">ToPrimitive</code>運算轉換左與右運算元為原始資料類型值(primitive)</li>\\n<li>在第 1 步轉換後，如果有運算元出現原始資料類型是”字串”類型值時，則另一運算元作強制轉換為字串，然後作字串的連接運算(concatenation)</li>\\n<li>在其他情況時，所有運算元都會轉換為原始資料類型的”數字”類型值，然後作數學的相加運算(addition)</li>\\n</ol>\\n<h2>ToPrimitive 內部運算</h2>\\n<p>因此，加號運算符只能使用於原始資料類型，那麼對於物件類型的值，要如何轉換為原始資料類型？下面說明是如何轉換為原始資料類型的。</p>\\n<p>在<a href=\\\"http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive\\\">ECMAScript 6th Edition #7.1.1</a>，有一個抽象的<code class=\\\"language-text\\\">ToPrimitive</code>運算，它會用於物件轉換為原始資料類型，這個運算不只會用在加號運算符，也會用在關係比較或值相等比較的運算中。下面有關於<code class=\\\"language-text\\\">ToPrimitive</code>的說明語法:</p>\\n<blockquote>\\n<p>ToPrimitive(input, PreferredType?)</p>\\n</blockquote>\\n<p><code class=\\\"language-text\\\">input</code>代表代入的值，而<code class=\\\"language-text\\\">PreferredType</code>可以是數字(Number)或字串(String)其中一種，這會代表”優先的”、“首選的”的要進行轉換到哪一種原始類型，轉換的步驟會依這裡的值而有所不同。但如果沒有提供這個值也就是預設情況，則會設定轉換的<code class=\\\"language-text\\\">hint</code>值為<code class=\\\"language-text\\\">&quot;default&quot;</code>。這個首選的轉換原始類型的指示(<code class=\\\"language-text\\\">hint</code>值)，是在作內部轉換時由 JS 視情況自動加上的，一般情況就是預設值。</p>\\n<p>而在 JS 的<code class=\\\"language-text\\\">Object</code>原型的設計中，都一定會有兩個<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>方法，所以這兩個方法在所有物件裡面都會有，不過它們在轉換有可能會交換被呼叫的順序。</p>\\n<h3>當 PreferredType 為數字(Number)時</h3>\\n<p>當<code class=\\\"language-text\\\">PreferredType</code>為數字(Number)時，<code class=\\\"language-text\\\">input</code>為要被轉換的值，以下是轉換這個<code class=\\\"language-text\\\">input</code>值的步驟:</p>\\n<ol>\\n<li>如果<code class=\\\"language-text\\\">input</code>是原始資料類型，則直接回傳<code class=\\\"language-text\\\">input</code>。</li>\\n<li>否則，如果<code class=\\\"language-text\\\">input</code>是個物件時，則呼叫物件的<code class=\\\"language-text\\\">valueOf()</code>方法，如果能得到原始資料類型的值，則回傳這個值。</li>\\n<li>否則，如果<code class=\\\"language-text\\\">input</code>是個物件時，呼叫物件的<code class=\\\"language-text\\\">toString()</code>方法，如果能得到原始資料類型的值，則回傳這個值。</li>\\n<li>否則，拋出 TypeError 錯誤。</li>\\n</ol>\\n<h3>當 PreferredType 為字串(String)時</h3>\\n<p>上面的步驟 2 與 3 對調，如同下面所說:</p>\\n<ol>\\n<li>如果<code class=\\\"language-text\\\">input</code>是原始資料類型，則直接回傳<code class=\\\"language-text\\\">input</code>。</li>\\n<li>否則，如果<code class=\\\"language-text\\\">input</code>是個物件時，呼叫物件的<code class=\\\"language-text\\\">toString()</code>方法，如果能得到原始資料類型的值，則回傳這個值。</li>\\n<li>否則，如果<code class=\\\"language-text\\\">input</code>是個物件時，則呼叫物件的<code class=\\\"language-text\\\">valueOf()</code>方法，如果能得到原始資料類型的值，則回傳這個值。</li>\\n<li>否則，拋出 TypeError 錯誤。</li>\\n</ol>\\n<h3>PreferredType 沒提供時，也就是 hint 為”default”時</h3>\\n<p>與<code class=\\\"language-text\\\">PreferredType</code>為數字(Number)時的步驟相同。</p>\\n<blockquote>\\n<p><strong>數字</strong>其實是預設的首選類型，也就是說在一般情況下，加號運算中的物件要作轉型時，都是先呼叫<code class=\\\"language-text\\\">valueOf</code>再呼叫<code class=\\\"language-text\\\">toString</code>。</p>\\n</blockquote>\\n<p>但這有兩個例外，一個是<code class=\\\"language-text\\\">Date</code>物件，另一是<code class=\\\"language-text\\\">Symbol</code>物件，它們覆蓋了原來的<code class=\\\"language-text\\\">PreferredType</code>行為，<code class=\\\"language-text\\\">Date</code>物件的預設首選類型是字串(String)。</p>\\n<blockquote>\\n<p>因此你會看到在一些教學文件上會區分為兩大類物件，一類是 Date 物件，另一類叫 非 Date(non-date) 物件。因為這兩大類的物件在進行轉換為原始資料類型時，首選類型恰好相反。</p>\\n</blockquote>\\n<h3>模擬程式碼說明</h3>\\n<p>以簡單的模擬程式碼來說明，加號運算符(+)的執行過程就是像下面這個模擬碼一樣，我想這會很容易理解:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">a <span class=\\\"token operator\\\">+</span> b<span class=\\\"token punctuation\\\">:</span>\\n    pa <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">ToPrimitive</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">)</span>\\n    pb <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">ToPrimitive</span><span class=\\\"token punctuation\\\">(</span>b<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>pa is string <span class=\\\"token operator\\\">||</span> pb is string<span class=\\\"token punctuation\\\">)</span>\\n       <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">concat</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">ToString</span><span class=\\\"token punctuation\\\">(</span>pa<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">ToString</span><span class=\\\"token punctuation\\\">(</span>pb<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">else</span>\\n       <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">ToNumber</span><span class=\\\"token punctuation\\\">(</span>pa<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">ToNumber</span><span class=\\\"token punctuation\\\">(</span>pb<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>步驟簡單來說就是，運算元都用<code class=\\\"language-text\\\">ToPrimitive</code>先轉換為原始資料類型，然後其一是字串時，使用<code class=\\\"language-text\\\">ToString</code>強制轉換另一個運算元，然後作字串連接運算。要不然，就是都使用<code class=\\\"language-text\\\">ToNumber</code>強制轉換為數字作加法運算。</p>\\n<p>而<code class=\\\"language-text\\\">ToPrimitive</code>在遇到物件類型時，預設呼叫方式是先呼叫<code class=\\\"language-text\\\">valueOf</code>再呼叫<code class=\\\"language-text\\\">toString</code>，一般情況數字類型是首選類型。</p>\\n<p>上面說的<code class=\\\"language-text\\\">ToString</code>與<code class=\\\"language-text\\\">ToNumber</code>這兩個也是 JS 內部的抽象運算。</p>\\n<h2>valueOf 與 toString 方法</h2>\\n<p><code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">ToString</code>是在 Object 中的兩個必有的方法，位於 Object.prototype 上，它是物件要轉為原始資料類型的兩個姐妹方法。從上面的內容已經可以看到，<code class=\\\"language-text\\\">ToPrimitive</code>這個抽象的內部運算，會依照設定的首選的類型，決定要先後呼叫<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>方法的順序，當數字為首選類型時，優先使用<code class=\\\"language-text\\\">valueOf</code>，然後再呼叫<code class=\\\"language-text\\\">toString</code>。當字串為首選類型時，則是相反的順序。預設呼叫方式則是如數字首選類型一樣，是先呼叫<code class=\\\"language-text\\\">valueOf</code>再呼叫<code class=\\\"language-text\\\">toString</code>。</p>\\n<h3>JS 對於 Object 與 Array 的設計</h3>\\n<p>在 JS 中所設計的<code class=\\\"language-text\\\">Object</code>純物件類型的<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>方法，它們的回傳如下:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">valueOf</code>方法回傳值: 物件本身。</li>\\n<li><code class=\\\"language-text\\\">toString</code>方法回傳值: ”[object Object]“字串值，不同的內建物件的回傳值是”[object type]“字串，“type”指的是物件本身的類型識別，例如 Math 物件是回傳”[object Math]“字串。但有些內建物件因為覆蓋了這個方法，所以直接呼叫時不是這種值。(注意: 這個回傳字串的前面的”object”開頭英文是小寫，後面開頭英文是大寫)</li>\\n</ul>\\n<p>你有可能會看過，利用 Object 中的 toString 來進行各種不同物件的判斷語法，這在以前 JS 能用的函式庫或方法不多的年代經常看到，不過它需要配合使用函式中的<code class=\\\"language-text\\\">call</code>方法，才能輸出正確的物件類型值，例如:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> Object<span class=\\\"token punctuation\\\">.</span>prototype<span class=\\\"token punctuation\\\">.</span>toString<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token string\\\">\\\"[object Array]\\\"</span>\\n\\n<span class=\\\"token operator\\\">></span> Object<span class=\\\"token punctuation\\\">.</span>prototype<span class=\\\"token punctuation\\\">.</span>toString<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token string\\\">\\\"[object Date]\\\"</span></code></pre>\\n      </div>\\n<p>所以，從上面的內容就可以知道，下面的這段程式碼的結果會是呼叫到<code class=\\\"language-text\\\">toString</code>方法(因為<code class=\\\"language-text\\\">valueOf</code>方法的回傳並不是原始的資料類型):</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token string\\\">\\\"1[object Object]\\\"</span></code></pre>\\n      </div>\\n<p>一元正號(+)，具有讓首選類型(也就是 hint)設置為數字(Number)的功能，所以可以強制讓物件轉為數字類型，一般的物件會轉為:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">;</span><span class=\\\"token operator\\\">+</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token comment\\\">//相當於 +\\\"[object Object]\\\"</span>\\n<span class=\\\"token comment\\\">// NaN</span></code></pre>\\n      </div>\\n<p>當然，物件的這兩個方法都可以被覆蓋，你可以用下面的程式碼來觀察這兩個方法的執行順序，下面這個都是先呼叫<code class=\\\"language-text\\\">valueOf</code>的情況:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> obj <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  valueOf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'valueOf'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token comment\\\">// object</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  toString<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'toString'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">'obj'</span> <span class=\\\"token comment\\\">// string</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//valueOf -> toString -> '1obj'</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">+</span>obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//valueOf -> toString -> NaN</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span> <span class=\\\"token operator\\\">+</span> obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//valueOf -> toString -> 'obj'</span></code></pre>\\n      </div>\\n<p>先呼叫<code class=\\\"language-text\\\">toString</code>的情況比較少見，大概只有<code class=\\\"language-text\\\">Date</code>物件或強制要轉換為字串時才會看到:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> obj <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  valueOf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'valueOf'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token comment\\\">// number</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  toString<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'toString'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token comment\\\">// object</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//toString -> valueOf -> alert(\\\"1\\\");</span>\\n<span class=\\\"token function\\\">String</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//toString -> valueOf -> \\\"1\\\";</span></code></pre>\\n      </div>\\n<p>而下面這個例子會造成錯誤，因為不論順序是如何都得不到原始資料類型的值，錯誤訊息是”TypeError: Cannot convert object to primitive value”，從這個訊息中很明白的告訴你，它這裡面會需要轉換物件到原始資料類型:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> obj <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  valueOf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'valueOf'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token comment\\\">// object</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  toString<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'toString'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token comment\\\">// string</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>obj <span class=\\\"token operator\\\">+</span> obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//valueOf -> toString -> error!</span></code></pre>\\n      </div>\\n<p>Array(陣列)很常用到，雖然它是個物件類型，但它與 Object 的設計不同，它的<code class=\\\"language-text\\\">toString</code>有覆蓋，說明一下陣列的<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>的兩個方法的回傳值:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">valueOf</code>方法回傳值: 物件本身。(與 Object 一樣)</li>\\n<li><code class=\\\"language-text\\\">toString</code>方法回傳值: 相當於用陣列值呼叫<code class=\\\"language-text\\\">join(&#39;,&#39;)</code>所回傳的字串。也就是<code class=\\\"language-text\\\">[1,2,3].toString()</code>會是<code class=\\\"language-text\\\">&quot;1,2,3&quot;</code>，這點要特別注意。</li>\\n</ul>\\n<p>Function 物件很少會用到，它的<code class=\\\"language-text\\\">toString</code>也有被覆蓋，所以並不是 Object 中的那個<code class=\\\"language-text\\\">toString</code>，Function 物件的<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>的兩個方法的回傳值:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">valueOf</code>方法回傳值: 物件本身。(與 Object 一樣)</li>\\n<li><code class=\\\"language-text\\\">toString</code>方法回傳值: 函式中包含的程式碼轉為字串值</li>\\n</ul>\\n<h3>Number、String、Boolean 三個包裝物件</h3>\\n<p>包裝物件是 JS 為原始資料類型數字、字串、布林專門設計的物件，所有的這三種原始資料類型所使用到的屬性與方法，都是在這上面所提供。</p>\\n<p>包裝物件的<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>的兩個方法在原型上有經過覆蓋，所以它們的回傳值與一般的 Object 的設計不同:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">valueOf</code>方法回傳值: 對應的原始資料類型值</li>\\n<li><code class=\\\"language-text\\\">toString</code>方法回傳值: 對應的原始資料類型值，轉換為字串類型時的字串值</li>\\n</ul>\\n<p><code class=\\\"language-text\\\">toString</code>方法會比較特別，這三個包裝物件裡的<code class=\\\"language-text\\\">toString</code>的細部說明如下:</p>\\n<ul>\\n<li>Number 包裝物件的<code class=\\\"language-text\\\">toString</code>方法: 可以有一個傳入參數，可以決定轉換為字串時的進位(2、8、16)</li>\\n<li>String 包裝物件的<code class=\\\"language-text\\\">toString</code>方法: 與 String 包裝物件中的<code class=\\\"language-text\\\">valueOf</code>相同回傳結果</li>\\n<li>Boolean 包裝物件的<code class=\\\"language-text\\\">toString</code>方法: 回傳”true”或”false”字串</li>\\n</ul>\\n<p>另外，常被搞混的是直接使用<code class=\\\"language-text\\\">Number()</code>、<code class=\\\"language-text\\\">String()</code>與<code class=\\\"language-text\\\">Boolean()</code>三個強制轉換函式的用法，這與包裝物件的用法不同，包裝物件是必須使用<code class=\\\"language-text\\\">new</code>關鍵字進行物件實體化的，例如<code class=\\\"language-text\\\">new Number(123)</code>，而<code class=\\\"language-text\\\">Number(&#39;123&#39;)</code>則是強制轉換其他類型為數字類型的函式。</p>\\n<p><code class=\\\"language-text\\\">Number()</code>、<code class=\\\"language-text\\\">String()</code>與<code class=\\\"language-text\\\">Boolean()</code>三個強制轉換函式，所對應的就是在 ECMAScript 標準中的<code class=\\\"language-text\\\">ToNumber</code>、<code class=\\\"language-text\\\">ToString</code>、<code class=\\\"language-text\\\">ToBoolean</code>三個內部運算轉換的對照表。而當它們要轉換物件類型前，會先用上面說的<code class=\\\"language-text\\\">ToPrimitive</code>先轉換物件為原始資料類型，再進行轉換到所要的類型值。</p>\\n<p>不管如何，包裝物件很少會被使用到，一般我們只會直接使用原始資料類型的值。而強制轉換函式因為也有取代的語法，它們會被用到的機會也不多。</p>\\n<h2>應用實例</h2>\\n<h3>字串 + 其他原始類型</h3>\\n<p>字串在加號運算有最高的優先運算，與字串相加必定是字串連接運算(concatenation)。所有的其他原始資料類型轉為字串，可以參考 ECMAScript 標準中的<a href=\\\"http://www.ecma-international.org/ecma-262/6.0/#sec-tostring\\\">ToString</a>對照表，以下為一些簡單的範例:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">'1'</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">123</span>\\n<span class=\\\"token string\\\">\\\"1123\\\"</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">'1'</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token boolean\\\">false</span>\\n<span class=\\\"token string\\\">\\\"1false\\\"</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">'1'</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token keyword\\\">null</span>\\n<span class=\\\"token string\\\">\\\"1null\\\"</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">'1'</span> <span class=\\\"token operator\\\">+</span> undefined\\n<span class=\\\"token string\\\">\\\"1undefined\\\"</span></code></pre>\\n      </div>\\n<h3>數字 + 其他的非字串的原始資料類型</h3>\\n<p>數字與其他類型作相加時，除了字串會優先使用字串連接運算(concatenation)的，其他都要依照數字為優先，所以除了字串之外的其他原始資料類型，都要轉換為數字來進行數學的相加運算。如果明白這項規則，就會很容易的得出加法運算的結果。</p>\\n<p>所有轉為數字類型可以參考 ECMAScript 標準中的<a href=\\\"http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber\\\">ToNumber</a>對照表，以下為一些簡單的範例:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token comment\\\">//true轉為1, false轉為0</span>\\n<span class=\\\"token number\\\">2</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token keyword\\\">null</span> <span class=\\\"token comment\\\">//null轉為0</span>\\n<span class=\\\"token number\\\">1</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> undefined <span class=\\\"token comment\\\">//null轉為NaN</span>\\n<span class=\\\"token number\\\">NaN</span></code></pre>\\n      </div>\\n<h3>數字/字串以外的原始資料類型作加法運算</h3>\\n<p>所以，當數字與字串以外的其他原始資料類型直接使用加號運算時，就是轉為數字再運算，這與字串無關。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token boolean\\\">true</span>\\n<span class=\\\"token number\\\">2</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token keyword\\\">null</span>\\n<span class=\\\"token number\\\">1</span>\\n\\n<span class=\\\"token operator\\\">></span> undefined <span class=\\\"token operator\\\">+</span> <span class=\\\"token keyword\\\">null</span>\\n<span class=\\\"token number\\\">NaN</span></code></pre>\\n      </div>\\n<h3>空陣列 + 空陣列</h3>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token string\\\">\\\"\\\"</span></code></pre>\\n      </div>\\n<p>兩個陣列相加，依然按照<code class=\\\"language-text\\\">valueOf -&gt; toString</code>的順序，但因為<code class=\\\"language-text\\\">valueOf</code>是陣列本身，所以會以<code class=\\\"language-text\\\">toString</code>的回傳值才是原始資料類型，也就是空字串，所以這個運算相當於兩個空字串在相加，依照加法運算規則第 2 步驟，是字串連接運算(concatenation)，兩個空字串連接最後得出一個空字串。</p>\\n<h3>空物件 + 空物件</h3>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token string\\\">\\\"[object Object][object Object]\\\"</span></code></pre>\\n      </div>\\n<p>兩個空物件相加，依然按照<code class=\\\"language-text\\\">valueOf -&gt; toString</code>的順序，但因為<code class=\\\"language-text\\\">valueOf</code>是物件本身，所以會以<code class=\\\"language-text\\\">toString</code>的回傳值才是原始資料類型，也就是”[object Object]“字串，所以這個運算相當於兩個”[object Object]“字串在相加，依照加法運算規則第 2 步驟，是字串連接運算(concatenation)，最後得出一個”<a href=\\\"\\\">object Object</a>“字串。</p>\\n<p>但是這個結果有例外，上面的結果只是在 Chrome 瀏覽器上的結果(v55)，怎麼說呢？</p>\\n<p>有些瀏覽器例如 Firefox、Edge 瀏覽器會把<code class=\\\"language-text\\\">{} + {}</code>直譯為相當於<code class=\\\"language-text\\\">+{}</code>語句，因為它們會認為以花括號開頭(<code class=\\\"language-text\\\">{</code>)的，是一個區塊語句的開頭，而不是一個物件字面量的語句，所以會認為略過第一個<code class=\\\"language-text\\\">{}</code>，把它認為是個<code class=\\\"language-text\\\">+{}</code>的語句，也就是相當於強制求出數字值的<code class=\\\"language-text\\\">Number({})</code>運算，相當於<code class=\\\"language-text\\\">Number(&quot;[object Object]&quot;)</code>運算，最後得出的是<code class=\\\"language-text\\\">NaN</code>。</p>\\n<blockquote>\\n<p>特別注意: <code class=\\\"language-text\\\">{} + {}</code>在不同的瀏覽器有不同結果</p>\\n</blockquote>\\n<p>如果在第一個(前面)的空物件加上圓括號(<code class=\\\"language-text\\\">()</code>)，這樣 JS 就會認為前面是個物件，就可以得出同樣的結果:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token string\\\">\\\"[object Object][object Object]\\\"</span></code></pre>\\n      </div>\\n<p>或是分開來先定義物件的變數值，也可以得出同樣的結果，像下面這樣:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">let</span> foo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> bar <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token operator\\\">></span> foo <span class=\\\"token operator\\\">+</span> bar<span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<blockquote>\\n<p>註: 上面說的行為這與加號運算的第一個(前面)的物件字面值是不是個空物件無關，就算是裡面有值的物件字面，例如<code class=\\\"language-text\\\">{a:1, b:2}</code>，也是同樣的結果。</p>\\n</blockquote>\\n<h3>空物件 + 空陣列</h3>\\n<p>上面同樣的把<code class=\\\"language-text\\\">{}</code>當作區塊語句的情況又會發生，不過這次所有的瀏覽器都會有一致結果，如果<code class=\\\"language-text\\\">{}</code>(空物件)在前面，而<code class=\\\"language-text\\\">[]</code>(空陣列)在後面時，前面那個會被認為是區塊而不是物件。</p>\\n<p>所以<code class=\\\"language-text\\\">{} + []</code>相當於<code class=\\\"language-text\\\">+[]</code>語句，也就是相當於強制求出數字值的<code class=\\\"language-text\\\">Number([])</code>運算，相當於<code class=\\\"language-text\\\">Number(&quot;&quot;)</code>運算，最後得出的是<code class=\\\"language-text\\\">0</code>數字。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token number\\\">0</span>\\n\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token string\\\">\\\"[object Object]\\\"</span></code></pre>\\n      </div>\\n<blockquote>\\n<p>特別注意: 所以如果第一個(前面)是<code class=\\\"language-text\\\">{}</code>時，後面加上其他的像陣列、數字或字串，這時候加號運算會直接變為一元正號運算，也就是強制轉為數字的運算。這是個陷阱要小心。</p>\\n</blockquote>\\n<h3>Date 物件</h3>\\n<p>Date 物件的<code class=\\\"language-text\\\">valueOf</code>與<code class=\\\"language-text\\\">toString</code>的兩個方法的回傳值:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">valueOf</code>方法回傳值:</li>\\n<li><code class=\\\"language-text\\\">toString</code>方法回傳值:</li>\\n</ul>\\n<p>Date 物件上面有提及是首選類型為”字串”的一種例外的物件，這與其他的物件的行為不同(一般物件會先呼叫<code class=\\\"language-text\\\">valueOf</code>再呼叫<code class=\\\"language-text\\\">toString</code>)，在進行加號運算時時，它會優先使用<code class=\\\"language-text\\\">toString</code>來進行轉換，最後必定是字串連接運算(concatenation)，例如以下的結果:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">\\\"1Sun Nov 27 2016 01:09:03 GMT+0800 (CST)\\\"</span></code></pre>\\n      </div>\\n<p>要得出 Date 物件中的<code class=\\\"language-text\\\">valueOf</code>回傳值，需要使用一元加號(+)，來強制轉換它為數字類型，例如以下的程式碼:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">+</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token number\\\">1480180751492</span></code></pre>\\n      </div>\\n<h3>Symbols 類型</h3>\\n<p>ES6 中新加入的 Symbols 資料類型，它不算是值也不是物件，所以完全不能直接用於加法運算，它並沒有內部自動轉型的設計，使用時會報錯。</p>\\n<h2>結論</h2>\\n<p><code class=\\\"language-text\\\">{} + {}</code>的結果是會因瀏覽器而有不同結果，Chrome 中是<code class=\\\"language-text\\\">[object Object][object Object]</code>字串連接，但其它的瀏覽器則是認為相當於<code class=\\\"language-text\\\">+{}</code>運算，得出<code class=\\\"language-text\\\">NaN</code>數字類型。</p>\\n<p><code class=\\\"language-text\\\">{} + []</code>的結果是相當於<code class=\\\"language-text\\\">+[]</code>，結果是<code class=\\\"language-text\\\">0</code>數字類型。</p>\\n<h2>參考資料</h2>\\n<ul>\\n<li><a href=\\\"http://www.2ality.com/2012/01/object-plus-object.html\\\">What is {} + {} in JavaScript?</a></li>\\n</ul>\",\"htmlAst\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"在 JS 中的運算符共同的情況中，(+)符號是很常見的一種，它有以下的使用情況:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"數字的加法運算，二元運算\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"字串的連接運算，二元運算，最高優先\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"正號，一元運算，可延伸為強制轉換其他類型的運算元為數字類型\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"當然，如果考慮多個符號一起使用時，(+=)與(++)又是另外的用途。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"另一個常見的是花括號({})，它有兩個用途也很常見:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"物件的字面文字定義\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"區塊語句\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"所以，要能回答這個問題，要先搞清楚重點是什麼？\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"第一個重點是:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"加號(+)運算在 JS 中在使用上的規定是什麼。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"第二個重點則是:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"物件在 JS 中是怎麼轉換為原始資料類型的值的。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"加號運算符(+)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"除了上面說明的常見情況外，在標準中轉換的規則還有以下幾個，要注意它的順序:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"operand + operand = result\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"運算轉換左與右運算元為原始資料類型值(primitive)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"在第 1 步轉換後，如果有運算元出現原始資料類型是”字串”類型值時，則另一運算元作強制轉換為字串，然後作字串的連接運算(concatenation)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"在其他情況時，所有運算元都會轉換為原始資料類型的”數字”類型值，然後作數學的相加運算(addition)\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive 內部運算\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"因此，加號運算符只能使用於原始資料類型，那麼對於物件類型的值，要如何轉換為原始資料類型？下面說明是如何轉換為原始資料類型的。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"在\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive\"},\"children\":[{\"type\":\"text\",\"value\":\"ECMAScript 6th Edition #7.1.1\"}]},{\"type\":\"text\",\"value\":\"，有一個抽象的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"運算，它會用於物件轉換為原始資料類型，這個運算不只會用在加號運算符，也會用在關係比較或值相等比較的運算中。下面有關於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"的說明語法:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive(input, PreferredType?)\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"代表代入的值，而\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"PreferredType\"}]},{\"type\":\"text\",\"value\":\"可以是數字(Number)或字串(String)其中一種，這會代表”優先的”、“首選的”的要進行轉換到哪一種原始類型，轉換的步驟會依這裡的值而有所不同。但如果沒有提供這個值也就是預設情況，則會設定轉換的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"hint\"}]},{\"type\":\"text\",\"value\":\"值為\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"default\\\"\"}]},{\"type\":\"text\",\"value\":\"。這個首選的轉換原始類型的指示(\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"hint\"}]},{\"type\":\"text\",\"value\":\"值)，是在作內部轉換時由 JS 視情況自動加上的，一般情況就是預設值。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"而在 JS 的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Object\"}]},{\"type\":\"text\",\"value\":\"原型的設計中，都一定會有兩個\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法，所以這兩個方法在所有物件裡面都會有，不過它們在轉換有可能會交換被呼叫的順序。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"當 PreferredType 為數字(Number)時\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"當\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"PreferredType\"}]},{\"type\":\"text\",\"value\":\"為數字(Number)時，\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"為要被轉換的值，以下是轉換這個\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"值的步驟:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"是原始資料類型，則直接回傳\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"否則，如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"是個物件時，則呼叫物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf()\"}]},{\"type\":\"text\",\"value\":\"方法，如果能得到原始資料類型的值，則回傳這個值。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"否則，如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"是個物件時，呼叫物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString()\"}]},{\"type\":\"text\",\"value\":\"方法，如果能得到原始資料類型的值，則回傳這個值。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"否則，拋出 TypeError 錯誤。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"當 PreferredType 為字串(String)時\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"上面的步驟 2 與 3 對調，如同下面所說:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ol\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"是原始資料類型，則直接回傳\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"否則，如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"是個物件時，呼叫物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString()\"}]},{\"type\":\"text\",\"value\":\"方法，如果能得到原始資料類型的值，則回傳這個值。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"否則，如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"input\"}]},{\"type\":\"text\",\"value\":\"是個物件時，則呼叫物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf()\"}]},{\"type\":\"text\",\"value\":\"方法，如果能得到原始資料類型的值，則回傳這個值。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"否則，拋出 TypeError 錯誤。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"PreferredType 沒提供時，也就是 hint 為”default”時\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"PreferredType\"}]},{\"type\":\"text\",\"value\":\"為數字(Number)時的步驟相同。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"strong\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"數字\"}]},{\"type\":\"text\",\"value\":\"其實是預設的首選類型，也就是說在一般情況下，加號運算中的物件要作轉型時，都是先呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"再呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"但這有兩個例外，一個是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Date\"}]},{\"type\":\"text\",\"value\":\"物件，另一是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Symbol\"}]},{\"type\":\"text\",\"value\":\"物件，它們覆蓋了原來的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"PreferredType\"}]},{\"type\":\"text\",\"value\":\"行為，\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Date\"}]},{\"type\":\"text\",\"value\":\"物件的預設首選類型是字串(String)。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"因此你會看到在一些教學文件上會區分為兩大類物件，一類是 Date 物件，另一類叫 非 Date(non-date) 物件。因為這兩大類的物件在進行轉換為原始資料類型時，首選類型恰好相反。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"模擬程式碼說明\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"以簡單的模擬程式碼來說明，加號運算符(+)的執行過程就是像下面這個模擬碼一樣，我想這會很容易理解:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"text\",\"value\":\"a \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" b\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\"\\n    pa \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"a\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    pb \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"b\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"if\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"pa is string \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"||\"}]},{\"type\":\"text\",\"value\":\" pb is string\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n       \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"concat\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"pa\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"pb\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"else\"}]},{\"type\":\"text\",\"value\":\"\\n       \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"add\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToNumber\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"pa\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToNumber\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"pb\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"步驟簡單來說就是，運算元都用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"先轉換為原始資料類型，然後其一是字串時，使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"text\",\"value\":\"強制轉換另一個運算元，然後作字串連接運算。要不然，就是都使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToNumber\"}]},{\"type\":\"text\",\"value\":\"強制轉換為數字作加法運算。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"而\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"在遇到物件類型時，預設呼叫方式是先呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"再呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"，一般情況數字類型是首選類型。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"上面說的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToNumber\"}]},{\"type\":\"text\",\"value\":\"這兩個也是 JS 內部的抽象運算。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"valueOf 與 toString 方法\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"text\",\"value\":\"是在 Object 中的兩個必有的方法，位於 Object.prototype 上，它是物件要轉為原始資料類型的兩個姐妹方法。從上面的內容已經可以看到，\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"這個抽象的內部運算，會依照設定的首選的類型，決定要先後呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法的順序，當數字為首選類型時，優先使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"，然後再呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"。當字串為首選類型時，則是相反的順序。預設呼叫方式則是如數字首選類型一樣，是先呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"再呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"JS 對於 Object 與 Array 的設計\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"在 JS 中所設計的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Object\"}]},{\"type\":\"text\",\"value\":\"純物件類型的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法，它們的回傳如下:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 物件本身。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: ”[object Object]“字串值，不同的內建物件的回傳值是”[object type]“字串，“type”指的是物件本身的類型識別，例如 Math 物件是回傳”[object Math]“字串。但有些內建物件因為覆蓋了這個方法，所以直接呼叫時不是這種值。(注意: 這個回傳字串的前面的”object”開頭英文是小寫，後面開頭英文是大寫)\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"你有可能會看過，利用 Object 中的 toString 來進行各種不同物件的判斷語法，這在以前 JS 能用的函式庫或方法不多的年代經常看到，不過它需要配合使用函式中的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"call\"}]},{\"type\":\"text\",\"value\":\"方法，才能輸出正確的物件類型值，例如:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" Object\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"prototype\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"toString\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"call\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"[\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"]\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"[object Array]\\\"\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" Object\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"prototype\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"text\",\"value\":\"toString\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"call\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"new\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"class-name\"]},\"children\":[{\"type\":\"text\",\"value\":\"Date\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"[object Date]\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"所以，從上面的內容就可以知道，下面的這段程式碼的結果會是呼叫到\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法(因為\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"方法的回傳並不是原始的資料類型):\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1[object Object]\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"一元正號(+)，具有讓首選類型(也就是 hint)設置為數字(Number)的功能，所以可以強制讓物件轉為數字類型，一般的物件會轉為:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\";\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//相當於 +\\\"[object Object]\\\"\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// NaN\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"當然，物件的這兩個方法都可以被覆蓋，你可以用下面的程式碼來觀察這兩個方法的執行順序，下面這個都是先呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"的情況:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"let\"}]},{\"type\":\"text\",\"value\":\" obj \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n  valueOf\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n    console\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'valueOf'\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// object\"}]},{\"type\":\"text\",\"value\":\"\\n  \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\"\\n  toString\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n    console\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'toString'\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'obj'\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// string\"}]},{\"type\":\"text\",\"value\":\"\\n  \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\nconsole\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" obj\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//valueOf -> toString -> '1obj'\"}]},{\"type\":\"text\",\"value\":\"\\nconsole\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\"obj\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//valueOf -> toString -> NaN\"}]},{\"type\":\"text\",\"value\":\"\\nconsole\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"''\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" obj\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//valueOf -> toString -> 'obj'\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"先呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的情況比較少見，大概只有\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Date\"}]},{\"type\":\"text\",\"value\":\"物件或強制要轉換為字串時才會看到:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"let\"}]},{\"type\":\"text\",\"value\":\" obj \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n  valueOf\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n    console\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'valueOf'\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// number\"}]},{\"type\":\"text\",\"value\":\"\\n  \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\"\\n  toString\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n    console\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'toString'\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// object\"}]},{\"type\":\"text\",\"value\":\"\\n  \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"alert\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"obj\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//toString -> valueOf -> alert(\\\"1\\\");\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"String\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"obj\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//toString -> valueOf -> \\\"1\\\";\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"而下面這個例子會造成錯誤，因為不論順序是如何都得不到原始資料類型的值，錯誤訊息是”TypeError: Cannot convert object to primitive value”，從這個訊息中很明白的告訴你，它這裡面會需要轉換物件到原始資料類型:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"let\"}]},{\"type\":\"text\",\"value\":\" obj \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n  valueOf\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n    console\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'valueOf'\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// object\"}]},{\"type\":\"text\",\"value\":\"\\n  \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\"\\n  toString\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\":\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\"\\n    console\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'toString'\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n    \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"// string\"}]},{\"type\":\"text\",\"value\":\"\\n  \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\n\\nconsole\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\".\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"function\"]},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"text\",\"value\":\"obj \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" obj\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//valueOf -> toString -> error!\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Array(陣列)很常用到，雖然它是個物件類型，但它與 Object 的設計不同，它的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"有覆蓋，說明一下陣列的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的兩個方法的回傳值:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 物件本身。(與 Object 一樣)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 相當於用陣列值呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"join(',')\"}]},{\"type\":\"text\",\"value\":\"所回傳的字串。也就是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"[1,2,3].toString()\"}]},{\"type\":\"text\",\"value\":\"會是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1,2,3\\\"\"}]},{\"type\":\"text\",\"value\":\"，這點要特別注意。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Function 物件很少會用到，它的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"也有被覆蓋，所以並不是 Object 中的那個\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"，Function 物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的兩個方法的回傳值:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 物件本身。(與 Object 一樣)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 函式中包含的程式碼轉為字串值\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Number、String、Boolean 三個包裝物件\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"包裝物件是 JS 為原始資料類型數字、字串、布林專門設計的物件，所有的這三種原始資料類型所使用到的屬性與方法，都是在這上面所提供。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"包裝物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的兩個方法在原型上有經過覆蓋，所以它們的回傳值與一般的 Object 的設計不同:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 對應的原始資料類型值\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法回傳值: 對應的原始資料類型值，轉換為字串類型時的字串值\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法會比較特別，這三個包裝物件裡的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的細部說明如下:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Number 包裝物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法: 可以有一個傳入參數，可以決定轉換為字串時的進位(2、8、16)\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"String 包裝物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法: 與 String 包裝物件中的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"相同回傳結果\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Boolean 包裝物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法: 回傳”true”或”false”字串\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"另外，常被搞混的是直接使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number()\"}]},{\"type\":\"text\",\"value\":\"、\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"String()\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Boolean()\"}]},{\"type\":\"text\",\"value\":\"三個強制轉換函式的用法，這與包裝物件的用法不同，包裝物件是必須使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"new\"}]},{\"type\":\"text\",\"value\":\"關鍵字進行物件實體化的，例如\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"new Number(123)\"}]},{\"type\":\"text\",\"value\":\"，而\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number('123')\"}]},{\"type\":\"text\",\"value\":\"則是強制轉換其他類型為數字類型的函式。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number()\"}]},{\"type\":\"text\",\"value\":\"、\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"String()\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Boolean()\"}]},{\"type\":\"text\",\"value\":\"三個強制轉換函式，所對應的就是在 ECMAScript 標準中的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToNumber\"}]},{\"type\":\"text\",\"value\":\"、\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"text\",\"value\":\"、\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToBoolean\"}]},{\"type\":\"text\",\"value\":\"三個內部運算轉換的對照表。而當它們要轉換物件類型前，會先用上面說的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"ToPrimitive\"}]},{\"type\":\"text\",\"value\":\"先轉換物件為原始資料類型，再進行轉換到所要的類型值。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"不管如何，包裝物件很少會被使用到，一般我們只會直接使用原始資料類型的值。而強制轉換函式因為也有取代的語法，它們會被用到的機會也不多。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"應用實例\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"字串 + 其他原始類型\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"字串在加號運算有最高的優先運算，與字串相加必定是字串連接運算(concatenation)。所有的其他原始資料類型轉為字串，可以參考 ECMAScript 標準中的\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://www.ecma-international.org/ecma-262/6.0/#sec-tostring\"},\"children\":[{\"type\":\"text\",\"value\":\"ToString\"}]},{\"type\":\"text\",\"value\":\"對照表，以下為一些簡單的範例:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'1'\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"123\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1123\\\"\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'1'\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"boolean\"]},\"children\":[{\"type\":\"text\",\"value\":\"false\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1false\\\"\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'1'\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"null\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1null\\\"\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"'1'\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" undefined\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1undefined\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"數字 + 其他的非字串的原始資料類型\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"數字與其他類型作相加時，除了字串會優先使用字串連接運算(concatenation)的，其他都要依照數字為優先，所以除了字串之外的其他原始資料類型，都要轉換為數字來進行數學的相加運算。如果明白這項規則，就會很容易的得出加法運算的結果。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"所有轉為數字類型可以參考 ECMAScript 標準中的\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber\"},\"children\":[{\"type\":\"text\",\"value\":\"ToNumber\"}]},{\"type\":\"text\",\"value\":\"對照表，以下為一些簡單的範例:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"boolean\"]},\"children\":[{\"type\":\"text\",\"value\":\"true\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//true轉為1, false轉為0\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"2\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"null\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//null轉為0\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" undefined \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"comment\"]},\"children\":[{\"type\":\"text\",\"value\":\"//null轉為NaN\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"NaN\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"數字/字串以外的原始資料類型作加法運算\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"所以，當數字與字串以外的其他原始資料類型直接使用加號運算時，就是轉為數字再運算，這與字串無關。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"boolean\"]},\"children\":[{\"type\":\"text\",\"value\":\"true\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"boolean\"]},\"children\":[{\"type\":\"text\",\"value\":\"true\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"2\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"boolean\"]},\"children\":[{\"type\":\"text\",\"value\":\"true\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"null\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" undefined \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"null\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"NaN\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"空陣列 + 空陣列\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"[\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"]\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"[\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"]\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"兩個陣列相加，依然按照\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf -> toString\"}]},{\"type\":\"text\",\"value\":\"的順序，但因為\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"是陣列本身，所以會以\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的回傳值才是原始資料類型，也就是空字串，所以這個運算相當於兩個空字串在相加，依照加法運算規則第 2 步驟，是字串連接運算(concatenation)，兩個空字串連接最後得出一個空字串。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"空物件 + 空物件\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"[object Object][object Object]\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"兩個空物件相加，依然按照\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf -> toString\"}]},{\"type\":\"text\",\"value\":\"的順序，但因為\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"是物件本身，所以會以\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的回傳值才是原始資料類型，也就是”[object Object]“字串，所以這個運算相當於兩個”[object Object]“字串在相加，依照加法運算規則第 2 步驟，是字串連接運算(concatenation)，最後得出一個”\"},{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"object Object\"}]},{\"type\":\"text\",\"value\":\"“字串。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"但是這個結果有例外，上面的結果只是在 Chrome 瀏覽器上的結果(v55)，怎麼說呢？\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"有些瀏覽器例如 Firefox、Edge 瀏覽器會把\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{} + {}\"}]},{\"type\":\"text\",\"value\":\"直譯為相當於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"+{}\"}]},{\"type\":\"text\",\"value\":\"語句，因為它們會認為以花括號開頭(\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"text\",\"value\":\")的，是一個區塊語句的開頭，而不是一個物件字面量的語句，所以會認為略過第一個\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{}\"}]},{\"type\":\"text\",\"value\":\"，把它認為是個\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"+{}\"}]},{\"type\":\"text\",\"value\":\"的語句，也就是相當於強制求出數字值的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number({})\"}]},{\"type\":\"text\",\"value\":\"運算，相當於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number(\\\"[object Object]\\\")\"}]},{\"type\":\"text\",\"value\":\"運算，最後得出的是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"NaN\"}]},{\"type\":\"text\",\"value\":\"。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"特別注意: \"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{} + {}\"}]},{\"type\":\"text\",\"value\":\"在不同的瀏覽器有不同結果\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果在第一個(前面)的空物件加上圓括號(\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"()\"}]},{\"type\":\"text\",\"value\":\")，這樣 JS 就會認為前面是個物件，就可以得出同樣的結果:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"[object Object][object Object]\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"或是分開來先定義物件的變數值，也可以得出同樣的結果，像下面這樣:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"let\"}]},{\"type\":\"text\",\"value\":\" foo \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"text\",\"value\":\" bar \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\";\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" foo \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" bar\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\";\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"註: 上面說的行為這與加號運算的第一個(前面)的物件字面值是不是個空物件無關，就算是裡面有值的物件字面，例如\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{a:1, b:2}\"}]},{\"type\":\"text\",\"value\":\"，也是同樣的結果。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"空物件 + 空陣列\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"上面同樣的把\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{}\"}]},{\"type\":\"text\",\"value\":\"當作區塊語句的情況又會發生，不過這次所有的瀏覽器都會有一致結果，如果\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{}\"}]},{\"type\":\"text\",\"value\":\"(空物件)在前面，而\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"[]\"}]},{\"type\":\"text\",\"value\":\"(空陣列)在後面時，前面那個會被認為是區塊而不是物件。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"所以\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{} + []\"}]},{\"type\":\"text\",\"value\":\"相當於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"+[]\"}]},{\"type\":\"text\",\"value\":\"語句，也就是相當於強制求出數字值的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number([])\"}]},{\"type\":\"text\",\"value\":\"運算，相當於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"Number(\\\"\\\")\"}]},{\"type\":\"text\",\"value\":\"運算，最後得出的是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"0\"}]},{\"type\":\"text\",\"value\":\"數字。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"[\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"]\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"0\"}]},{\"type\":\"text\",\"value\":\"\\n\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"[\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"]\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"{\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"}\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"[object Object]\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"blockquote\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"特別注意: 所以如果第一個(前面)是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{}\"}]},{\"type\":\"text\",\"value\":\"時，後面加上其他的像陣列、數字或字串，這時候加號運算會直接變為一元正號運算，也就是強制轉為數字的運算。這是個陷阱要小心。\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Date 物件\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Date 物件的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"與\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"的兩個方法的回傳值:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"方法回傳值:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"方法回傳值:\"}]},{\"type\":\"text\",\"value\":\"\\n\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Date 物件上面有提及是首選類型為”字串”的一種例外的物件，這與其他的物件的行為不同(一般物件會先呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"再呼叫\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\")，在進行加號運算時時，它會優先使用\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"toString\"}]},{\"type\":\"text\",\"value\":\"來進行轉換，最後必定是字串連接運算(concatenation)，例如以下的結果:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"new\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"class-name\"]},\"children\":[{\"type\":\"text\",\"value\":\"Date\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"string\"]},\"children\":[{\"type\":\"text\",\"value\":\"\\\"1Sun Nov 27 2016 01:09:03 GMT+0800 (CST)\\\"\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"要得出 Date 物件中的\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"valueOf\"}]},{\"type\":\"text\",\"value\":\"回傳值，需要使用一元加號(+)，來強制轉換它為數字類型，例如以下的程式碼:\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"div\",\"properties\":{\"className\":[\"gatsby-highlight\"],\"dataLanguage\":\"js\"},\"children\":[{\"type\":\"text\",\"value\":\"\\n      \"},{\"type\":\"element\",\"tagName\":\"pre\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-js\"]},\"children\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"operator\"]},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"keyword\"]},\"children\":[{\"type\":\"text\",\"value\":\"new\"}]},{\"type\":\"text\",\"value\":\" \"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"class-name\"]},\"children\":[{\"type\":\"text\",\"value\":\"Date\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"punctuation\"]},\"children\":[{\"type\":\"text\",\"value\":\")\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"token\",\"number\"]},\"children\":[{\"type\":\"text\",\"value\":\"1480180751492\"}]}]}]},{\"type\":\"text\",\"value\":\"\\n      \"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h3\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Symbols 類型\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"ES6 中新加入的 Symbols 資料類型，它不算是值也不是物件，所以完全不能直接用於加法運算，它並沒有內部自動轉型的設計，使用時會報錯。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"結論\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{} + {}\"}]},{\"type\":\"text\",\"value\":\"的結果是會因瀏覽器而有不同結果，Chrome 中是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"[object Object][object Object]\"}]},{\"type\":\"text\",\"value\":\"字串連接，但其它的瀏覽器則是認為相當於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"+{}\"}]},{\"type\":\"text\",\"value\":\"運算，得出\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"NaN\"}]},{\"type\":\"text\",\"value\":\"數字類型。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"{} + []\"}]},{\"type\":\"text\",\"value\":\"的結果是相當於\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"+[]\"}]},{\"type\":\"text\",\"value\":\"，結果是\"},{\"type\":\"element\",\"tagName\":\"code\",\"properties\":{\"className\":[\"language-text\"]},\"children\":[{\"type\":\"text\",\"value\":\"0\"}]},{\"type\":\"text\",\"value\":\"數字類型。\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"h2\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"參考資料\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"ul\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"li\",\"properties\":{},\"children\":[{\"type\":\"element\",\"tagName\":\"a\",\"properties\":{\"href\":\"http://www.2ality.com/2012/01/object-plus-object.html\"},\"children\":[{\"type\":\"text\",\"value\":\"What is {} + {} in JavaScript?\"}]}]},{\"type\":\"text\",\"value\":\"\\n\"}]}],\"data\":{\"quirksMode\":false}},\"fields\":{\"slug\":\"/js-object-plus-object/\",\"prefix\":\"2017-01-06\"},\"frontmatter\":{\"title\":\"JS中的 {} + {} 與 {} + [] 的結果是什麼？\",\"subTitle\":\"What is {} + {} and {} + [] in JS\",\"cover\":{\"childImageSharp\":{\"resize\":{\"src\":\"/static/js-e913ee06a329636f87ee127d80c07295-ada8c.jpg\"}}}}},\"author\":{\"id\":\"/Volumes/Zero/gatsby/eddychangme/content/parts/author.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>作者: <strong>Eddy Chang</strong></p>\"},\"footnote\":{\"id\":\"/Volumes/Zero/gatsby/eddychangme/content/parts/footnote.md absPath of file >>> MarkdownRemark\",\"html\":\"<ul>\\n<li>本站所有內容係採用 <a href=\\\"https://creativecommons.org/licenses/by-sa/4.0/\\\">創用 CC 姓名標示-相同方式分享 4.0 國際</a> 授權條款授權</li>\\n</ul>\"},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"441411672723522\"}}}},\"pathContext\":{\"slug\":\"/js-object-plus-object/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/js-object-plus-object.json\n// module id = 817\n// module chunks = 80653169461397"],"sourceRoot":""}